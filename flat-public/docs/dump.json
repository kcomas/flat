[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/app.js",
    "memberof": null,
    "longname": "app/app.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport http from 'http';\nimport server from './flat-lib/server/server.js';\nimport controll from './init.js';\nimport flatLog from './flat-lib/helpers/flatLog.js';\nimport auth from './flat-admin/helpers/auth.js';\n\nimport adminRouter from './flat-admin/adminRouter.js';\nimport sectionRouter from './flat-admin/routers/section.js';\nimport fileRouter from './flat-admin/routers/file.js';\nimport pageRouter from './flat-admin/routers/page.js';\nimport templateRouter from './flat-admin/routers/template.js';\nimport userRouter from './flat-admin/routers/user.js';\nimport blogRouter from './flat-admin/routers/blog.js'\nimport indexRouter from './flat-admin/routers/index.js';\n\nimport mainRouter from './flat-routers/index.js';\nimport installRouter from './flat-routers/install.js';\nimport signinRouter from './flat-routers/signin.js';\nimport debugRouter from './flat-routers/debug.js';\nimport mainBlogRouter from './flat-routers/blog.js';\nimport blogListRouter from './flat-routers/blogList.js';\n\nconst app = new server();\n\nconst logger = new flatLog(controll.config.getValue('logDir'),controll.config.getValue('logToConsole'));\n\napp.use(logger.log());\n\napp.use((req,res,next)=>{\n    req.sessionCookieName = controll.config.getValue('sessionCookie');\n    req.sessionCookieTime = 1000 * 60 * 60 * 24 * parseInt(controll.config.getValue('sessionTime'));\n    next();\n});\n\n/**\n * The array of routes required for auth\n * @type {string}\n */\nvar authRoutes = ['/flat-admin','/flat-debug'];\n\napp.use(auth(controll,authRoutes));\n\napp.route('/',mainRouter.run(controll));\n\napp.route('/blog',mainBlogRouter.run(controll));\n\napp.route('/blog-list',blogListRouter.run(controll));\n\napp.route('/flat-login',signinRouter.run(controll));\n\napp.route('/flat-install',installRouter.run(controll));\n\napp.route('/flat-debug',debugRouter.run(controll));\n\napp.route('/flat-admin',adminRouter.run(controll));\napp.route('/flat-admin/file/',fileRouter.run(controll));\napp.route('/flat-admin/page/',pageRouter.run(controll));\napp.route('/flat-admin/section/',sectionRouter.run(controll));\napp.route('/flat-admin/template/',templateRouter.run(controll));\napp.route('/flat-admin/user/',userRouter.run(controll));\napp.route('/flat-admin/blog/',blogRouter.run(controll));\napp.route('/flat-admin/index/',indexRouter.run(controll));\n\napp.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('Content-Type','text/html; charset=utf8');\n    res.end('<h1>404</h1>');\n});\n\nhttp.createServer(app.run()).listen(controll.config.getValue('port'));\nconsole.log(\"Server Started\");\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "app",
    "memberof": "app/app.js",
    "longname": "app/app.js~app",
    "access": null,
    "export": false,
    "importPath": "flat",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/server/server.js~server"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "app/app.js",
    "longname": "app/app.js~logger",
    "access": null,
    "export": false,
    "importPath": "flat",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/helpers/flatLog.js~flatLog"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "authRoutes",
    "memberof": "app/app.js",
    "longname": "app/app.js~authRoutes",
    "access": null,
    "export": false,
    "importPath": "flat",
    "importStyle": null,
    "description": "The array of routes required for auth",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/adminRouter.js",
    "memberof": null,
    "longname": "app/flat-admin/adminRouter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\nimport pages from './pages.js';\nimport pageManager from './page/pageManager.js';\nimport auth from './helpers/auth.js';\nimport showError from './helpers/showError.js';\nimport showSuccess from './helpers/showSuccess.js';\n\nconst adminRouter = new router();\n\nconst manager = new pageManager(pages);\n\n//load all of the pages into memory\nvar renderErr = manager.renderAll();\nif(renderErr.length > 0){\n    console.dir(renderErr);\n}\n\n/**\n * List of get routes not to auto lookup\n * @type {array}\n */\nvar denyList = ['/flat-admin/logout'];\n\n/**\n * Length of the deny list\n * @type {number}\n */\nvar denyListLength = denyList.length;\n\n/**\n * Check if a url is in the deny list\n * @param {string} url - the url to check\n * @return {boolean} true if the url is not in the deny list\n */\nfunction isAllowed(url){\n    for(let i=0; i<denyListLength; i++){\n        if(url === denyList[i]){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * The expression to check the urls in the next use\n * @type {regexp}\n */\nvar urlReg = new RegExp('^/flat-admin$|^/flat-admin/');\n\nadminRouter.use((req,res,next)=>{\n   if(req.method === 'GET' && isAllowed(req.url)){\n        manager.load(req.url.replace(urlReg,'/'),(err,page)=>{\n            if(err){\n                showError(req,res,err,404);\n            } else {\n                showSuccess(req,res,page,200);\n            }\n        });\n   } else {\n        next();\n   }\n});\n\n//logout\nadminRouter.get('/flat-admin/logout',(req,res)=>{\n    adminRouter.controller.sessionManager.destroy(req,res,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n            return;\n        }\n        res.redirect('/flat-login');\n    });\n});\n\n//render a single admin page\nadminRouter.post('/flat-admin/render',(req,res)=>{\n    var page = req.body.page;\n    var err = manager.render(page);\n    if(err){\n        showError(req,res,err,500);\n    } else {\n        showSuccess(req,res,\"Page Created\",200);\n    }\n});\n\n//render all of the the admin pages\nadminRouter.post('/flat-admin/renderAll',(req,res)=>{\n    var err = manager.renderAll();\n    if(err.length > 0){\n        showError(req,res,err,500);\n    } else {\n        showSuccess(req,res,\"Pages Created\",200);\n    }\n});\n\n\nadminRouter.always((req,res)=>{\n        showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default adminRouter;\n"
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "manager",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~manager",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/pageManager.js~pageManager"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "renderErr",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~renderErr",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "denyList",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~denyList",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": "List of get routes not to auto lookup",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "denyListLength",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~denyListLength",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": "Length of the deny list",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 9,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isAllowed",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~isAllowed",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": "Check if a url is in the deny list",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the url to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the url is not in the deny list"
    },
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "urlReg",
    "memberof": "app/flat-admin/adminRouter.js",
    "longname": "app/flat-admin/adminRouter.js~urlReg",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/adminRouter.js",
    "importStyle": null,
    "description": "The expression to check the urls in the next use",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "regexp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 11,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/helpers/auth.js",
    "memberof": null,
    "longname": "app/flat-admin/helpers/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Check if a route need to be authenticated\n * @param {array} authList - the array of urls that need auth\n * @param {string} url - the url to check\n * @return {boolean} - if the url needs to be authenticated\n */\nfunction needsAuth(authList,url){\n    for(let i=0,l=authList.length; i<l; i++){\n        if(url.indexOf(authList[i]) === 0){\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Function for authentication the admin routes\n * @param {object} controller - the memoery file controller\n * @param {array} authList - the routes that need to be authenticated\n * @return {function(req:object,req:object,next:function)} the middlewear function\n */\nexport default function auth(controller,authList){\n    return (req,res,next)=>{\n        //check if the user has a logged in session\n        if(needsAuth(authList,req.url)){\n            var ses = controller.sessionManager.getSession(req);\n            if(ses !== null){\n                if(ses.getData('username')){\n                    req.session = ses;\n                    var user = controller.userManager.findByParam(ses.getData('username'));\n                    if(user === null){\n                        res.redirect('/flat-login');\n                        return;\n                    }\n                    req.user = user;\n                    next();\n                } else {\n                    res.redirect('/flat-login');\n                }       \n            } else {\n                res.redirect('/flat-login');\n            }\n        } else {\n            //track page views\n            var data = controller.info.data;\n            if(data.pageViews[req.url]){\n                data.pageViews[req.url]++;\n            } else {\n                data.pageViews[req.url] = 1;\n            }\n            next();\n        }\n    }\n}\n"
  },
  {
    "__docId__": 12,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "needsAuth",
    "memberof": "app/flat-admin/helpers/auth.js",
    "longname": "app/flat-admin/helpers/auth.js~needsAuth",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/helpers/auth.js",
    "importStyle": null,
    "description": "Check if a route need to be authenticated",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "authList",
        "description": "the array of urls that need auth"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the url to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the url needs to be authenticated"
    },
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "auth",
    "memberof": "app/flat-admin/helpers/auth.js",
    "longname": "app/flat-admin/helpers/auth.js~auth",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/helpers/auth.js",
    "importStyle": "auth",
    "description": "Function for authentication the admin routes",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "the memoery file controller"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "authList",
        "description": "the routes that need to be authenticated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(req:object,req:object,next:function)"
      ],
      "spread": false,
      "description": "the middlewear function"
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/helpers/showError.js",
    "memberof": null,
    "longname": "app/flat-admin/helpers/showError.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n//show better json errors\nObject.defineProperty(Error.prototype, 'toJSON', {\n    value: function () {\n        var alt = {};\n        Object.getOwnPropertyNames(this).forEach((key)=>{\n            alt[key] = this[key];\n        }, this);\n        return alt;\n    },\n    configurable: true\n});\n\n/**\n * Render a json error page\n * @param {object} req - the request object\n * @param {object} res - the response object\n * @param {error} err - the json error object\n * @param {number} status - the status code\n */\nexport default function showError(req,res,err,status){\n    res.statusCode = status;\n    res.setHeader('Content-Type','application/json; charset=utf8');\n    res.end(JSON.stringify(err,null,2));\n}\n"
  },
  {
    "__docId__": 15,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "showError",
    "memberof": "app/flat-admin/helpers/showError.js",
    "longname": "app/flat-admin/helpers/showError.js~showError",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/helpers/showError.js",
    "importStyle": "showError",
    "description": "Render a json error page",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "error"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "the json error object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "the status code"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/helpers/showSuccess.js",
    "memberof": null,
    "longname": "app/flat-admin/helpers/showSuccess.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Show a sucess as html string\n * @param {object} req - the request object\n * @param {object} res - the response object\n * @param {string} msg - the html message\n * @param {number} status - the status code\n */\nexport default function showSuccess(req,res,msg,status){\n    res.statusCode = 200;\n    res.setHeader('Content-Type','text/html; charset=utf8');\n    res.end(msg);\n}\n"
  },
  {
    "__docId__": 17,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "showSuccess",
    "memberof": "app/flat-admin/helpers/showSuccess.js",
    "longname": "app/flat-admin/helpers/showSuccess.js~showSuccess",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/helpers/showSuccess.js",
    "importStyle": "showSuccess",
    "description": "Show a sucess as html string",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "the html message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "the status code"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/page/contentsRender.js",
    "memberof": null,
    "longname": "app/flat-admin/page/contentsRender.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * This function converts the contents into a single string to be added to the page\n * @param {string} dir - the directory of the content files\n * @param {array} contents - the array of the contents object as name:filename\n * @return {string} the contents rendered together\n */\nexport default function contentsRender(dir,contents){\n    var rendered = '';\n    contents.forEach((content)=>{\n        try {\n            rendered += '<uib-tab heading=\"'+content.name+'\" >'+fs.readFileSync(dir+content.filename,'utf8')+'</uib-tab>';   \n        } catch (err){\n            console.log(err);\n        }\n    });\n    return rendered;\n}\n"
  },
  {
    "__docId__": 19,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "contentsRender",
    "memberof": "app/flat-admin/page/contentsRender.js",
    "longname": "app/flat-admin/page/contentsRender.js~contentsRender",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/page/contentsRender.js",
    "importStyle": "contentsRender",
    "description": "This function converts the contents into a single string to be added to the page",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory of the content files"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": "the array of the contents object as name:filename"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the contents rendered together"
    },
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/page/page.js",
    "memberof": null,
    "longname": "app/flat-admin/page/page.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\nimport contentsRender from './contentsRender.js';\nimport tagRender from './tagRender.js';\nimport pageRender from './pageRender.js';\n\n/**\n * The class used to define the admin pages\n */\nexport default class page {\n\n    /**\n     * @constructor\n     * @param {string} permalink - the permalink of the page\n     * @param {string} title - the title of the page\n     * @param {object} pageConfig - the configuraton of the pages\n     * @param {string} controller - the controller for the content inside the tabs\n     * @property {string} templateDir - the directory of the templates\n     * @property {string} contentDir - the directory of the content files\n     * @property {string} cacheDir - the directory of the built pages\n     * @property {array} metaDefault - the default meta object\n     * @property {array} cssDefault - the default css object\n     * @property {array} jsDefault - the default js object\n     * @property {array} headJsDefault - the default head js object\n     * @property {string} containerDefault - the default container filename\n     * @property {string} headDefault - the default head filename\n     * @property {string} menuDefault - the default menu filename\n     * @property {string} bodyDefault - the default body filename \n     * @param {array} meta - the array of meta objects\n     * @param {array} css - the array of css objects\n     * @param {array} js - the array of js objetcs\n     * @param {array} headJs - array of js objects that go in the head\n     * @param {string} container - the template of the container filename\n     * @param {string} head - the template of the head filename\n     * @param {string} menu - the template of the menu filename\n     * @parma {string} body - the template of the body filename\n     * @param {string} foot - the template of the foot filename\n     */\n    constructor(permalink,title,pageConfig,controller,meta,css,js,container,head,headJs,menu,body,foot){\n        \n        /**\n         * The page permalink\n         * @type {string}\n         */\n        this.permalink = permalink;\n\n        /**\n         * The page title\n         * @type {string}\n         */\n        this.title = title;\n\n        /**\n         * The page config for defaults\n         * @type {object}\n         */\n        this.config = pageConfig;\n\n        /**\n         * The page meta properties\n         * @type {array}\n         */\n        this.meta = meta || pageConfig.metaDefault.slice();\n\n        /**\n         * The page css properties\n         * @type {array}\n         */\n        this.css = css || pageConfig.cssDefault.slice();\n\n        /**\n         * The page js properties\n         * @type {array}\n         */\n        this.js = js || pageConfig.jsDefault.slice();\n\n        /**\n         * The page head js properites\n         * @type {array}\n         */\n        this.headJs = headJs || pageConfig.headJsDefault.slice();\n\n        /**\n         * The page container template\n         * @type {string}\n         */\n        this.container = container || pageConfig.containerDefault.slice();\n\n        /**\n         * The page head template\n         * @type {string}\n         */\n        this.head = head || pageConfig.headDefault.slice();\n\n        /**\n         * The page menu template\n         * @type {string}\n         */\n        this.menu = menu || pageConfig.menuDefault.slice();\n\n        /**\n         * The page body template\n         * @type {string}\n         */\n        this.body = body || pageConfig.bodyDefault.slice();\n\n        /**\n         * The page foot template\n         * @type {string}\n         */\n        this.foot = foot || pageConfig.footDefault.slice();\n\n        /**\n         * The page tab sections contents\n         * @type {array}\n         */\n        this.contents = [];\n\n        /**\n         * The extra tags for replacing in the template\n         * @type {array}\n         */\n        this.extraTags = [];\n\n        /**\n         * This defines if we load the page from memory or file\n         * @type {boolean}\n         */\n        this.memory = true;\n\n        /**\n         * This is the string of the page\n         */\n        this.pageString = '';\n\n        /**\n         * The page controller\n         * @type {string}\n         */\n        this.controller = controller;\n\n        this.addTag('controller',controller);\n\n    }\n\n    /**\n     * Add a js file to the js string\n     * @param {object} js - the js object\n     * @property {string} name - the name of the attribute\n     * @property {string} value - the value of the attribute\n     */\n    addJs(js){\n        this.js.push(js);\n    }\n\n    /**\n     * Add js to the head of the page\n     * @param {object} js - the js object\n     * @property {string} name - the name of the attribute\n     * @property {string} value - the value of the attribute\n     */\n    addHeadJs(js){\n        this.headJs.push(js);\n    }\n\n    /**\n     * Add a meta object to the meta array\n     * @param {object} meta - the meta object\n     * @property {string} name - the name of the attribute\n     * @property {string} value - the value of the attribute\n     */\n    addMeta(meta){\n        this.meta.push(meta);\n    }\n\n    /**\n     * Add contents to the contents array\n     * @param {string} name - the name of the contents section\n     * @param {string} filename - the filename of the contents section\n     */\n    addContents(name,filename){\n        var obj = {};\n        obj.name = name;\n        obj.filename = filename;\n        this.contents.push(obj);\n    }\n\n    /**\n     * Add an extra tag with content into the extra tags\n     * @param {string} name - the name of the tag\n     * @param {string} content - the content of the tag\n     */\n    addTag(name,content){\n        var obj = {};\n        obj[name] = content;\n        this.extraTags.push(obj);\n    }\n\n    /**\n     * Remove an extra tag with content\n     * @param {string} name - the name of the tag\n     */\n    removeTag(name){\n        for(let key in this.extraTags){\n            if(key === name){\n                delete this.extraTags[key];\n            }\n        }\n    }\n\n    /**\n     * Syncronously render the page\n     */\n    render(){\n        var tags = [];\n        tags.push({'contents':contentsRender(this.config.contentDir,this.contents)});\n        //render the tags\n        tags.push({'title':this.title});\n        tags.push({'meta':tagRender('meta',true,this.meta)});\n        tags.push({'css':tagRender('link',true,this.css)});\n        tags.push({'headJs':tagRender('script',false,this.headJs)});\n        tags.push({'js':tagRender('script',false,this.js)});\n        if(this.extraTags.length > 0){\n            tags = tags.concat(this.extraTags);\n        }\n        //add files\n        var files = [];\n        var tpl = this.config.templateDir;\n        files.push({'container':tpl+this.container});\n        files.push({'menu':tpl+this.menu});\n        files.push({'head':tpl+this.head});\n        files.push({'body':tpl+this.body});\n        files.push({'foot':tpl+this.foot});\n        //render the page to a file\n        this.pageString = pageRender(this.config.cacheDir,this.permalink,tags,files);\n    }\n\n    /**\n     * Load the page from a file and pass in a data object for angular\n     * @param {function(err:error,file:string)} callback - the callback function returns the file after the data is added\n     */\n    load(callback){\n        if(this.memory === true){\n                var string = this.pageString;\n                return callback(null,string);\n        } else {\n            fs.readFile(this.config.cacheDir+this.permalink.replace('/','~')+'.html','utf8',(err,file)=>{\n                if(err){\n                    console.log(err);\n                    return callback(err,null);\n                }\n                return callback(null,file);\n            });\n        }\n    }\n    \n\n}\n"
  },
  {
    "__docId__": 21,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "page",
    "memberof": "app/flat-admin/page/page.js",
    "longname": "app/flat-admin/page/page.js~page",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/page/page.js",
    "importStyle": "page",
    "description": "The class used to define the admin pages",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 22,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#constructor",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      },
      {
        "tagName": "@parma",
        "tagValue": "{string} body - the template of the body filename"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the permalink of the page"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "the title of the page"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pageConfig",
        "description": "the configuraton of the pages"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "the controller for the content inside the tabs"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "meta",
        "description": "the array of meta objects"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": "the array of css objects"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "js",
        "description": "the array of js objetcs"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "headJs",
        "description": "array of js objects that go in the head"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "container",
        "description": "the template of the container filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "head",
        "description": "the template of the head filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "menu",
        "description": "the template of the menu filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "foot",
        "description": "the template of the foot filename"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "templateDir",
        "description": "the directory of the templates"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contentDir",
        "description": "the directory of the content files"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cacheDir",
        "description": "the directory of the built pages"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "metaDefault",
        "description": "the default meta object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "cssDefault",
        "description": "the default css object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "jsDefault",
        "description": "the default js object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "headJsDefault",
        "description": "the default head js object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "containerDefault",
        "description": "the default container filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "headDefault",
        "description": "the default head filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "menuDefault",
        "description": "the default menu filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bodyDefault",
        "description": "the default body filename"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "permalink",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#permalink",
    "access": null,
    "description": "The page permalink",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "title",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#title",
    "access": null,
    "description": "The page title",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 25,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#config",
    "access": null,
    "description": "The page config for defaults",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "meta",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#meta",
    "access": null,
    "description": "The page meta properties",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "css",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#css",
    "access": null,
    "description": "The page css properties",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "js",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#js",
    "access": null,
    "description": "The page js properties",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "headJs",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#headJs",
    "access": null,
    "description": "The page head js properites",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "container",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#container",
    "access": null,
    "description": "The page container template",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 31,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#head",
    "access": null,
    "description": "The page head template",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "menu",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#menu",
    "access": null,
    "description": "The page menu template",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "body",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#body",
    "access": null,
    "description": "The page body template",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "foot",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#foot",
    "access": null,
    "description": "The page foot template",
    "lineNumber": 113,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "contents",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#contents",
    "access": null,
    "description": "The page tab sections contents",
    "lineNumber": 119,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "extraTags",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#extraTags",
    "access": null,
    "description": "The extra tags for replacing in the template",
    "lineNumber": 125,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "memory",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#memory",
    "access": null,
    "description": "This defines if we load the page from memory or file",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 38,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pageString",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#pageString",
    "access": null,
    "description": "This is the string of the page",
    "lineNumber": 136,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#controller",
    "access": null,
    "description": "The page controller",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addJs",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#addJs",
    "access": null,
    "description": "Add a js file to the js string",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "js",
        "description": "the js object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the attribute"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the attribute"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addHeadJs",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#addHeadJs",
    "access": null,
    "description": "Add js to the head of the page",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "js",
        "description": "the js object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the attribute"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the attribute"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addMeta",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#addMeta",
    "access": null,
    "description": "Add a meta object to the meta array",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "meta",
        "description": "the meta object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the attribute"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the attribute"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addContents",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#addContents",
    "access": null,
    "description": "Add contents to the contents array",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the contents section"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename of the contents section"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addTag",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#addTag",
    "access": null,
    "description": "Add an extra tag with content into the extra tags",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the tag"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "the content of the tag"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeTag",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#removeTag",
    "access": null,
    "description": "Remove an extra tag with content",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the tag"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#render",
    "access": null,
    "description": "Syncronously render the page",
    "lineNumber": 216,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pageString",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#pageString",
    "access": null,
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "app/flat-admin/page/page.js~page",
    "longname": "app/flat-admin/page/page.js~page#load",
    "access": null,
    "description": "Load the page from a file and pass in a data object for angular",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:error,file:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function returns the file after the data is added"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/page/pageManager.js",
    "memberof": null,
    "longname": "app/flat-admin/page/pageManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Handeles the loading and saving of pages based on routes\n */\nexport default class pageManager {\n\n    /**\n     * @constructor\n     * @param {array} pages - the pages to load into the page manager\n     */\n    constructor(pages){\n        \n        /**\n         * The pages array\n         * @type {array}\n         */\n        this.pages = pages;\n\n    }\n\n    /**\n     * Load a page based on the url\n     * @param {string} url - the url of the page\n     * @param {function(err:error,page:string)} callback - the page if found or error if not\n     * @return {function} the callback function\n     */\n    load(url,callback){\n        var page = null;\n        for(let i=0,length=this.pages.length; i<length; i++){\n            if(this.pages[i].permalink === url){\n                page = this.pages[i];\n                break;\n            }\n        }\n        if(page === null){\n            return callback(new Error(\"No Page Found\"),null);\n        }\n        page.load((err,string)=>{\n            if(err){\n                return callback(err,null);\n            }\n            return callback(null,string);\n        });\n    }\n\n    /**\n     * Render a page\n     * @param {string} url - the url of the page\n     * @return {Error} if there was an error rendering\n     */\n    render(url){\n        var page = null;\n        for(let i=0,length=this.pages.length; i<length; i++){\n            if(this.pages[i].permalink === url){\n                page = this.pages[i];\n                break;\n            }\n        }\n        if(page !== null){\n            try {\n                page.render();\n                return null;\n            } catch(err){\n                return error;\n            }\n        }\n        return new Error(\"Page Not Found\");\n    }\n\n    /**\n     * Render all of the pages - SLOW\n     * @return {array} array of errors if any \n     */\n    renderAll(){\n        var errors = [];\n        this.pages.forEach((page)=>{\n            try {\n                page.render();\n            } catch(err){\n                errors.push(err);\n            }\n        });\n        return errors;\n    }\n\n}\n"
  },
  {
    "__docId__": 50,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "pageManager",
    "memberof": "app/flat-admin/page/pageManager.js",
    "longname": "app/flat-admin/page/pageManager.js~pageManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/page/pageManager.js",
    "importStyle": "pageManager",
    "description": "Handeles the loading and saving of pages based on routes",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-admin/page/pageManager.js~pageManager",
    "longname": "app/flat-admin/page/pageManager.js~pageManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "pages",
        "description": "the pages to load into the page manager"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pages",
    "memberof": "app/flat-admin/page/pageManager.js~pageManager",
    "longname": "app/flat-admin/page/pageManager.js~pageManager#pages",
    "access": null,
    "description": "The pages array",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "app/flat-admin/page/pageManager.js~pageManager",
    "longname": "app/flat-admin/page/pageManager.js~pageManager#load",
    "access": null,
    "description": "Load a page based on the url",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the url of the page"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,page:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the page if found or error if not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "app/flat-admin/page/pageManager.js~pageManager",
    "longname": "app/flat-admin/page/pageManager.js~pageManager#render",
    "access": null,
    "description": "Render a page",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "the url of the page"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": "if there was an error rendering"
    },
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "renderAll",
    "memberof": "app/flat-admin/page/pageManager.js~pageManager",
    "longname": "app/flat-admin/page/pageManager.js~pageManager#renderAll",
    "access": null,
    "description": "Render all of the pages - SLOW",
    "lineNumber": 76,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of errors if any"
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/page/pageRender.js",
    "memberof": null,
    "longname": "app/flat-admin/page/pageRender.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * This function builds the html files for the admin page\n * @param {string} dir - the directory of the cache files\n * @param {string} permalink - the filename/permalink of the page\n * @param {array} tags - the array of tag objets as key:content\n * @param {array} files - the array of files objects as name:filename to render\n * @return {string} - the string of the file generated\n */\nexport default function pageRender(dir,permalink,tags,files){\n    var file = dir+permalink.replace('/','~') + '.html';\n    var loadedFiles = [];\n    files.forEach((file)=>{\n        for(var key in file){\n            try {\n                loadedFiles.push({name:key,str:fs.readFileSync(file[key],'utf8')});\n            } catch(err){\n                console.log(err);\n            }\n        }\n    });\n    var container = loadedFiles.shift().str;\n    loadedFiles.forEach((file2)=>{\n        try{\n            var reg = new RegExp('%'+file2.name+'%','g');\n            container = container.replace(reg,file2.str);\n        } catch(err){\n            console.log(err);\n        }\n    });\n    tags.forEach((tag)=>{\n        for(var key in tag){\n            try {\n                var reg = new RegExp('%'+key+'%','g');\n                container = container.replace(reg,tag[key]);\n            } catch(err){\n                console.log(err);\n            }\n        }\n    });\n    try {\n        fs.writeFileSync(file,container,'utf8');\n    } catch(err){\n        console.log(err);\n    }\n    return container;\n}\n"
  },
  {
    "__docId__": 57,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pageRender",
    "memberof": "app/flat-admin/page/pageRender.js",
    "longname": "app/flat-admin/page/pageRender.js~pageRender",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/page/pageRender.js",
    "importStyle": "pageRender",
    "description": "This function builds the html files for the admin page",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory of the cache files"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the filename/permalink of the page"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "the array of tag objets as key:content"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "the array of files objects as name:filename to render"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the string of the file generated"
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/page/tagRender.js",
    "memberof": null,
    "longname": "app/flat-admin/page/tagRender.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Conver the tag array into tags\n * @param {string} tag - the tag to be used for each object in the array\n * @param {boolean} selfClose - does the tag self close\n * @param {array} objArray - the array of obejcts as attr:value\n * @return {string} the rendered string of tags\n */\nexport default function tagRender(tag,selfClose,objArray){\n    var render = '';\n    try {\n        objArray.forEach((obj)=>{\n            render += '<'+tag;\n            for(let key in obj){\n                render += ' '+key+'=\"'+obj[key]+'\"';\n            }\n            if(selfClose){\n                render += '/>';\n            } else {\n                render += '></'+tag+'>';\n            }\n        });\n    } catch(err){\n\n    }\n    return render;\n}\n"
  },
  {
    "__docId__": 59,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "tagRender",
    "memberof": "app/flat-admin/page/tagRender.js",
    "longname": "app/flat-admin/page/tagRender.js~tagRender",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/page/tagRender.js",
    "importStyle": "tagRender",
    "description": "Conver the tag array into tags",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": "the tag to be used for each object in the array"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "selfClose",
        "description": "does the tag self close"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "objArray",
        "description": "the array of obejcts as attr:value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the rendered string of tags"
    },
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/pages.js",
    "memberof": null,
    "longname": "app/flat-admin/pages.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport page from './page/page.js';\nimport fs from 'fs';\n\n/**\n * The global page config object\n * @type {object}\n * @property {string} templateDir - the directory of the templates\n * @property {string} contentDir - the directory of the content files\n * @property {string} cacheDir - the directory of the built pages\n * @property {array} metaDefault - the default meta object\n * @property {array} cssDefault - the default css object\n * @property {array} jsDefault - the default js object\n * @property {array} headJsDefault - the default head js object\n * @property {string} containerDefault - the default container filename\n * @property {string} headDefault - the default head filename\n * @property {string} menuDefault - the default menu filename\n * @property {string} bodyDefault - the default body filename \n */\nvar pageConfig = JSON.parse(fs.readFileSync('./flat-config/pageConfig.json'),'utf8');\n\n//make sure the cache dir exists\nif (!fs.existsSync(pageConfig.cacheDir)){\n    fs.mkdirSync(pageConfig.cacheDir);\n}\n\n/**\n * This is the array of all of the admin pages\n * @type {array}\n */\nvar pages = [];\n\n\nvar index = new page('/','Admin Home',pageConfig,'indexEdit');\nindex.addContents('Info','indexInfo.part');\nindex.addContents('Sessions','indexSessions.part');\nindex.addContents('Logs','indexLogs.part');\nindex.addJs({\"src\":\"/globals/admin/js/indexEditor.js\"});\n\nvar upload = new page('/upload','Upload Files',pageConfig,'adminUpload');\nupload.addContents('Upload','fileUpload.part');\nupload.addContents('List','fileList.part');\nupload.addJs({\"src\":\"/globals/admin/js/uploadEditor.js\"});\n\nvar sectionEditor = new page('/section-editor','Edit Section',pageConfig,'adminSectionEdit');\nsectionEditor.addContents('Edit','sectionEditor.part');\nsectionEditor.addContents('List','sectionList.part');\nsectionEditor.addJs({\"src\":\"/globals/admin/js/sectionEditor.js\"});\nsectionEditor.addHeadJs({\"src\":\"/globals/tinymce/tinymce.min.js\"});\n\nvar templateEditor = new page('/template-editor','Edit Template',pageConfig,'adminTemplateEdit');\ntemplateEditor.addContents('Edit','templateEditor.part');\ntemplateEditor.addContents('List','templateList.part');\ntemplateEditor.addJs({\"src\":\"/globals/admin/js/templateEditor.js\"});\n\nvar pageEditor = new page('/page-editor','Edit Page',pageConfig,'adminPageEdit');\npageEditor.addContents('Edit','pageEditor.part');\npageEditor.addContents('List','pageList.part');\npageEditor.addJs({\"src\":\"/globals/admin/js/pageEditor.js\"});\npageEditor.addHeadJs({\"src\":\"/globals/tinymce/tinymce.min.js\"});\n\nvar userEditor = new page('/user-editor','Edit User',pageConfig,'userPageEdit');\nuserEditor.addContents('Edit','userEditor.part');\nuserEditor.addContents('List','userList.part');\nuserEditor.addContents('Add','userAdd.part');\nuserEditor.addJs({\"src\":\"/globals/admin/js/userEditor.js\"});\n\nvar blogEditor = new page('/blog-editor','Edit Blog',pageConfig,'blogPageEdit');\nblogEditor.addContents('Edit','blogEditor.part');\nblogEditor.addContents('List','blogList.part');\nblogEditor.addContents('Blog List Template','blogTemplate.part');\nblogEditor.addJs({\"src\":\"/globals/admin/js/blogEditor.js\"});\nblogEditor.addHeadJs({\"src\":\"/globals/tinymce/tinymce.min.js\"});\n\npages.push(index);\npages.push(sectionEditor);\npages.push(templateEditor);\npages.push(pageEditor);\npages.push(userEditor);\npages.push(upload);\npages.push(blogEditor);\n\nexport default pages;\n"
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pageConfig",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~pageConfig",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": "The global page config object",
    "lineNumber": 22,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "templateDir",
        "description": "the directory of the templates"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contentDir",
        "description": "the directory of the content files"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cacheDir",
        "description": "the directory of the built pages"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "metaDefault",
        "description": "the default meta object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "cssDefault",
        "description": "the default css object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "jsDefault",
        "description": "the default js object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "headJsDefault",
        "description": "the default head js object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "containerDefault",
        "description": "the default container filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "headDefault",
        "description": "the default head filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "menuDefault",
        "description": "the default menu filename"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bodyDefault",
        "description": "the default body filename"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "index",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~index",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "upload",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~upload",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sectionEditor",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~sectionEditor",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "templateEditor",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~templateEditor",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pageEditor",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~pageEditor",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "userEditor",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~userEditor",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "blogEditor",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~blogEditor",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-admin/page/page.js~page"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pages",
    "memberof": "app/flat-admin/pages.js",
    "longname": "app/flat-admin/pages.js~pages",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-admin/pages.js",
    "importStyle": "pages",
    "description": "This is the array of all of the admin pages",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/blog.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/blog.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\nimport blogRender from '../../flat-lib/helpers/blogRender.js';\n\nconst blogRouter = new router();\n\n//list the blogs\nblogRouter.post('/flat-admin/blog/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(blogRouter.controller.blogManager.toString());\n});\n\n//add update a blog\nblogRouter.post('/flat-admin/blog/upsert',(req,res)=>{\n    var name = req.body.name;\n    var title = req.body.title;\n    var author = req.user.get('username');\n    var content = req.body.content;\n    var tags = req.body.tags || [];\n    var permalink = req.body.permalink;\n    var blog = blogRouter.controller.blogManager.findByParam('permalink',permalink);\n    if(blog === null){\n        //create a new blog\n        blogRouter.controller.blogManager.create(name,title,author,content,tags,(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n                return;\n            }\n            showSuccess(req,res,'Blog Created',200);\n        });\n    } else {\n        //update existing\n        blog.upsert({'title':title,'content':content,'tags':tags},(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n                return;\n            }\n            showSuccess(req,res,'Blog Updated',200);\n        });\n    }\n});\n\n//remove a blog\nblogRouter.post('/flat-admin/blog/remove',(req,res)=>{\n    var permalink = req.body.permalink;\n    blogRouter.controller.blogManager.removeByParam('permalink',permalink,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n            return;\n        }\n         //delete the cached page if it exists\n         blogRouter.controller.blogCache.removeByParam('permalink',permalink,(err,done)=>{\n            //delete from the list cache\n            blogRouter.controller.blogListCache.removeByParam('permalink',permalink,(err,done)=>{\n                showSuccess(req,res,\"item deleted\",200);\n            });\n        });\n    });\n});\n\n//render a blog\nblogRouter.post('/flat-admin/blog/render',(req,res)=>{\n    var permalink = req.body.permalink;\n    var blog = blogRouter.controller.blogManager.findByParam('permalink',permalink);\n    if(blog === null){\n        showError(req,res,new Error('No Blog Found'),500);\n        return;\n    }\n    var cache = blogRouter.controller.blogCache.findByParam('permalink',permalink);\n    var listCache = blogRouter.controller.blogListCache.findByParam('permalink',permalink);\n    blogRender(blog,blogRouter.controller.blogTemplate.cache,blogRouter.controller.blogTemplate.blogHtml,blogRouter.controller.blogTemplate.blogListHtml,(cacheStr,listCacheStr)=>{ \n        if(cache === null && listCache === null){\n            //create\n            blogRouter.controller.blogCache.create(permalink,cacheStr,(err,done)=>{\n                if(err){\n                    showError(req,res,new Error('Failed To Create'),500);\n                    return;\n                }\n                blogRouter.controller.blogListCache.create(permalink,listCacheStr,(err,done)=>{\n                    if(err){\n                        showError(req,res,new Error('Falied To Create List Cache'),500);\n                        return;\n                    }\n                    showSuccess(req,res,'Blog Cache Created',200);\n                });\n            });\n        } else {\n            //update\n            cache.upsert({'fileStr':cacheStr},(err,done)=>{\n                if(err){\n                    showError(req,res,new Error('Failed To Update'),500);\n                    return;\n                }\n                listCache.upsert({'fileStr':listCacheStr},(err,done)=>{\n                    if(err){\n                        showError(req,res,new Error('Failed To Update List Cache'),500);\n                        return;\n                    }\n                    showSuccess(req,res,'Blog Updated',200);\n                });\n            });\n        }\n    });\n});\n\n//set the blog cache\nblogRouter.post('/flat-admin/blog/blogTemplate/cache',(req,res)=>{\n    var permalink = req.body.permalink;\n    var cache = blogRouter.controller.cacheManager.findByParam('permalink',permalink);\n    if(cache === null){\n        showError(req,res,new Error('No Cache Found'),500);\n        return;\n    }\n    blogRouter.controller.blogTemplate.cache = cache.get('fileStr');\n    showSuccess(req,res,'Blog Cache Set',200);\n});\n\n//update the blog list template\nblogRouter.post('/flat-admin/blog/blogTemplate/set',(req,res)=>{\n    var numPerPage = parseInt(req.body.numPerPage);\n    blogRouter.controller.blogTemplate.numPerPage = numPerPage;\n    showSuccess(req,res,'Blog List Template Set',200);\n});\n\n//get the current blog template information\nblogRouter.post('/flat-admin/blog/blogTemplate/get',(req,res)=>{\n    var obj = {\n        'numPerPage':blogRouter.controller.blogTemplate.numPerPage,\n        'cache':blogRouter.controller.blogTemplate.cache\n    };\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf-8');\n    res.end(JSON.stringify(obj));\n});\n\nblogRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default blogRouter;\n"
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/file.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/file.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\nimport uploadedFiles from '../../flat-lib/helpers/uploadedFiles.js';\n\nconst fileRouter = new router();\n\n//upload a file\nfileRouter.post('/flat-admin/file/upload',(req,res)=>{\n    if(req.body.private === 'true'){\n        var pri = true;\n    } else {\n        var pri = false;\n    }\n    var mType = uploadedFiles.mimeType(req.body.files.fileData.filename);\n    var upload = fileRouter.controller.uploadManager.findByParam('fileName',req.body.files.fileData.filename);\n    if(upload === null){\n        fileRouter.controller.uploadManager.create(req.body.files.fileData.filename,pri,mType,(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                fileRouter.controller.uploader.writeFile(pri,req.body.files.fileData.filename,mType,req.body.files.fileData.data,(err,done)=>{\n                    if(err){\n                        showError(req,res,err,500);\n                    } else {\n                        showSuccess(req,res,'file saved',200);\n                    }\n                });\n            }\n        });\n    } else {\n        upload.upsert({'private':pri,'fileName':req.body.files.fileData.filename,'mime':mType},(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                fileRouter.controller.uploader.writeFile(pri,req.body.files.fileData.filename,mType,req.body.files.fileData.data,(err,done)=>{\n                    if(err){\n                        showError(req,res,err,500);\n                    } else {\n                        showSuccess(req,res,'file saved',200);\n                    }\n                });\n            }\n        });\n    }\n});\n\n//list all of the files\nfileRouter.post('/flat-admin/file/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(fileRouter.controller.uploadManager.toString());\n});\n\n//list the private files\nfileRouter.post('/flat-admin/file/list/private',(req,res)=>{\n    var privateItems = fileRouter.controller.uploadManager.findManyByParam('private',true);\n    var str = '[';\n    privateItems.forEach((item)=>{\n        str += item.toString();\n    });\n    str += ']';\n    //str = str.replace(/,(?=[^,]*$)/, '');\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf-8');\n    res.end(str);\n});\n\n\n//remove a file\nfileRouter.post('/flat-admin/file/remove',(req,res)=>{\n    var filename = req.body.name;\n    fileRouter.controller.uploadManager.removeByParam('fileName',filename,(err,itemArr)=>{\n        if(err){\n            showError(req,res,err,500);\n        } else {\n            fileRouter.controller.uploader.removeFile(itemArr[0].get('private'),itemArr[0].get('fileName'),(err,done)=>{\n                if(err){\n                    showError(req,res,err,500);\n                } else {\n                    showSuccess(req,res,'file deleted',200);\n                }\n            });\n        }\n    });\n});\n\n//get the upload dirs\nfileRouter.post('/flat-admin/file/dirs',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('Content-Type','application/json; charset=utf8');\n    var obj = {};\n    obj.private = fileRouter.controller.uploader.privateDir;\n    obj.public = fileRouter.controller.uploader.publicDir;\n    res.end(JSON.stringify(obj));\n});\n\nfileRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default fileRouter;\n"
  },
  {
    "__docId__": 72,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/index.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/index.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\nimport tail from '../../flat-scripts/tail.js';\n\nconst indexRouter = new router();\n\n//list the sessions\nindexRouter.post('/flat-admin/index/list-sessions',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf-8');\n    res.end(indexRouter.controller.sessionManager.toString());\n});\n\n//get the current info object\nindexRouter.post('/flat-admin/index/info',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf-8');\n    res.end(indexRouter.controller.info.toString());\n});\n\n//force the info object to disk\nindexRouter.post('/flat-admin/index/info/toDisk',(req,res)=>{\n    indexRouter.controller.info.write((err,done)=>{\n        res.setHeader('content-type','text/html; charset=utf8');\n        if(err){\n            showError(req,res,new Error('Failed To Write To Disk'),500);\n            return;\n        }\n        showSuccess(req,res,'Info Writen',200);\n    });\n});\n\n//grab a log file\nindexRouter.post('/flat-admin/index/log',(req,res)=>{\n    var log = req.body.log;\n    var lines = parseInt(req.body.lines);\n    if(lines > 500){\n        lines = 500;\n    }\n    var logDir = indexRouter.controller.config.getValue('logDir');\n    tail(logDir+log,lines,(err,file)=>{\n        res.setHeader('content-type','text/plain; charset=utf-8');\n        res.statusCode = 200;\n        if(err){\n            res.end(err);\n            return;\n        }\n        res.end(file);\n    });\n});\n\n\n\nindexRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default indexRouter;\n"
  },
  {
    "__docId__": 73,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/page.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/page.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\nimport pageRender from '../../flat-lib/helpers/pageRender.js';\n\nconst pageRouter = new router();\n\n//list all of the pages\npageRouter.post('/flat-admin/page/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(pageRouter.controller.pageManager.toString());\n});\n\n//delete page\npageRouter.post('/flat-admin/page/remove',(req,res)=>{\n    pageRouter.controller.pageManager.removeByParam('permalink',req.body.permalink,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n        } else {\n            //delete the cached page if it exists\n            pageRouter.controller.cacheManager.removeByParam('permalink',req.body.permalink,(err,done)=>{\n                showSuccess(req,res,\"item deleted\",200);\n            });\n        }\n    });\n});\n\n//add update a page\npageRouter.post('/flat-admin/page/upsert',(req,res)=>{\n    var permalink = req.body.permalink\n    var def = req.body.def;\n    var template = req.body.template;\n    var page = pageRouter.controller.pageManager.findByParam('permalink',permalink);\n    if(page === null){\n        pageRouter.controller.pageManager.create(permalink,def,template,(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                showSuccess(req,res,'update/saved',200);\n            }\n        });\n    } else {\n        page.upsert({'def':def,'template':template},(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                showSuccess(req,res,'update/saved',200);\n            }\n        });\n    }\n});\n\n//create a page and add it to the cache\npageRouter.post('/flat-admin/page/render',(req,res)=>{\n    var permalink = req.body.permalink;\n    var page = pageRouter.controller.pageManager.findByParam('permalink',permalink);\n    if(page === null){\n        showError(req,res,new Error('No Page Found'),500);\n    } else {\n        //find the page template\n        var template = pageRouter.controller.templateManager.findByParam('name',page.get('template'));\n        if(template === null){\n            showError(req,res,new Error('Page Template Not Found'),500);\n        } else {\n            var cache = pageRouter.controller.cacheManager.findByParam('permalink',permalink);\n            var fileStr = pageRender(page.get('def'),template.get('layout'));\n            if(cache === null){\n                //create\n                pageRouter.controller.cacheManager.create(permalink,fileStr,(err,done)=>{\n                    if(err){\n                        showError(req,res,err,500);\n                    } else {\n                        showSuccess(req,res,\"Page Rendered\",200);\n                    }\n                });\n            } else {\n                //update\n                cache.upsert({'fileStr':fileStr},(err,done)=>{\n                    if(err){\n                        showError(req,res,err,500);\n                    } else {\n                        showSuccess(req,res,\"Page Rendered\",200);\n                    }\n                });\n            }\n        }\n    }\n});\n\npageRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default pageRouter;\n"
  },
  {
    "__docId__": 74,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/section.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/section.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js'\n\nconst sectionRouter = new router();\n\n//add/update a section to the sectionManager\nsectionRouter.post('/flat-admin/section/upsert',(req,res)=>{\n    var name = req.body.name;\n    var content = req.body.content;\n    //find if it exists\n    var section = sectionRouter.controller.sectionManager.findByParam('name',name);\n    if(section === null){\n        sectionRouter.controller.sectionManager.create(name,content,(err,done)=>{\n            if(err){\n                showerror(req,res,err,500);\n            } else {\n                showSuccess(req,res,\"updated/saved\",200);\n            }\n        });\n    } else {\n        section.upsert({'layout':content},(err,done)=>{\n            if(err){\n                showerror(req,res,err,500);\n            }\n            showSuccess(req,res,\"updated/saved\",200);\n        });\n    }\n});\n\n//list all of the sections\nsectionRouter.post('/flat-admin/section/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(sectionRouter.controller.sectionManager.toString());\n});\n\n//delete section\nsectionRouter.post('/flat-admin/section/remove',(req,res)=>{\n    var item = sectionRouter.controller.sectionManager.removeByParam('name',req.body.name,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n        } else {\n            showSuccess(req,res,\"item deleted\",200);\n        }\n    });\n\n});\n\nsectionRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default sectionRouter;\n"
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/template.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/template.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\nimport uploadedFiles from '../../flat-lib/helpers/uploadedFiles.js';\n\nconst templateRouter = new router();\n\n//add update a template\ntemplateRouter.post('/flat-admin/template/upsert',(req,res)=>{\n    var name = req.body.name;\n    var layout = req.body.layout;\n    try {\n      JSON.parse(layout);\n    } catch(err){\n        showError(req,res,err,500);\n        return;\n    }\n    var template = templateRouter.controller.templateManager.findByParam('name',name);\n    if(template === null){\n        templateRouter.controller.templateManager.create(name,layout,(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                showSuccess(req,res,'update/saved',200);\n            }\n        });\n    } else {\n        template.upsert({'layout':layout},(err,done)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                showSuccess(req,res,'update/saved',200);\n            }\n        });\n    }\n});\n\n//list all of the templates\ntemplateRouter.post('/flat-admin/template/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(templateRouter.controller.templateManager.toString());\n});\n\n//delete template\ntemplateRouter.post('/flat-admin/template/remove',(req,res)=>{\n    var item = templateRouter.controller.templateManager.removeByParam('name',req.body.name,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n        } else {\n            showSuccess(req,res,\"item deleted\",200);\n        }\n    });\n\n});\n\n//load a private file\ntemplateRouter.post('/flat-admin/template/load-private',(req,res)=>{\n    var filename = req.body.filename;\n    var item = templateRouter.controller.uploadManager.findByManyParams({'fileName':filename,'private':true});\n    if(item === null){\n        showError(req,res,new Error('private file not found'),500);\n    } else {\n        templateRouter.controller.uploader.readFile(templateRouter.controller.uploader.privateDir+filename,(err,mime,file)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                res.statusCode = 200;\n                res.setHeader('content-type',mime + '; charset=utf-8');\n                res.end(file);\n            }\n        });\n    }\n});\n\n//load a private file\ntemplateRouter.get('/flat-admin/template/load-private',(req,res)=>{\n    var filename = req.query.filename;\n    var item = templateRouter.controller.uploadManager.findByManyParams({'fileName':filename,'private':true});\n    if(item === null){\n        showError(req,res,new Error('private file not found'),500);\n    } else {\n        templateRouter.controller.uploader.readFile(templateRouter.controller.uploader.privateDir+filename,(err,mime,file)=>{\n            if(err){\n                showError(req,res,err,500);\n            } else {\n                res.statusCode = 200;\n                res.setHeader('content-type',mime + '; charset=utf-8');\n                res.end(file);\n            }\n        });\n    }\n});\n\n//download a template\ntemplateRouter.get('/flat-admin/template/download',(req,res)=>{\n    var name = req.query.name;\n    var template = templateRouter.controller.templateManager.findByParam('name',name);\n    if(template === null){\n        showError(req,res,new Error('template not found'),500);\n    } else {\n        res.statusCode = 200;\n        res.setHeader('content-type','application/json; charset=utf-8');\n        res.end(template.get('layout'));\n    }\n});\n\ntemplateRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default templateRouter;\n"
  },
  {
    "__docId__": 76,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-admin/routers/user.js",
    "memberof": null,
    "longname": "app/flat-admin/routers/user.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../../flat-lib/server/router.js';\nimport showError from '../helpers/showError.js';\nimport showSuccess from '../helpers/showSuccess.js';\n\nconst userRouter = new router();\n\n//get the cuurent user\nuserRouter.post('/flat-admin/user/current',(req,res)=>{            \n    res.statusCode = 200;\n    res.setHeader('Content-Type','application/json; charset=utf8');\n    res.end(req.user.toString());\n});\n\n//update the current user\nuserRouter.post('/flat-admin/user/current/update',(req,res)=>{\n    var email = req.body.email;\n    var changePass = req.body.changePass;\n    var passA = req.body.passA;\n    var passB = req.body.passB;\n    req.user.upsert({'email':email},(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n            return;\n        }\n        if(changePass === true){\n            if(passA === passB){\n                req.user.password(passA,(err,done)=>{\n                    if(err){\n                        showError(req,res,err,500);\n                        return;\n                    }\n                    showSuccess(req,res,\"Email/Password Updated\",200);\n                });\n            } else {\n                showError(req,res,new Error(\"Passwords Do Not Match\"),500);\n            }\n        } else {\n            showSuccess(req,res,\"Email Updated\",200);\n        }\n    });\n});\n\n//list all of the users\nuserRouter.post('/flat-admin/user/list',(req,res)=>{\n    res.statusCode = 200;\n    res.setHeader('content-type','application/json; charset=utf8');\n    res.end(userRouter.controller.userManager.toString());\n});\n\n//add a new user\nuserRouter.post('/flat-admin/user/add',(req,res)=>{\n    var username = req.body.username;\n    var email = req.body.email;\n    var passA = req.body.passA;\n    var passB = req.body.passB;\n    if(passA !== passB){\n        showError(req,res,new Error(\"Passwords Do Not Match\"),500);\n        return;\n    }\n    userRouter.controller.userManager.create(username,email,passA,(err,done)=>{\n        if(err){\n            showError(req,res,err,500);\n            return;\n        }\n        showSuccess(req,res,\"User Created\",200);\n    });\n});\n\n\nuserRouter.always((req,res)=>{\n    showError(req,res,new Error(\"Not Found\"),404);\n});\n\nexport default userRouter;\n"
  },
  {
    "__docId__": 77,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/blog/blog.js",
    "memberof": null,
    "longname": "app/flat-lib/blog/blog.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js'\n\n/**\n * This class defines each blog post\n * @extends {item}\n */\nexport default class blog extends item {\n\n    /**\n     * Create a new blog post\n     * @override\n     * @param {string} name - the name of the blog\n     * @param {string} title - the title of the blog\n     * @param {string} author - the author of the blog\n     * @param {string} content - the content of the blog\n     * @param {array} tags - the tags of the blog\n     * @param {function(err:error,done:boolean)} callback - the callback function\n     * @return {function} the callback function\n     */\n    create(name,title,author,content,tags,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.name = name;\n            this.data.title = title;\n            this.data.author = author;\n            this.data.content = content;\n            this.data.tags = tags;\n            this.data.dateCreated = new Date();\n            this.data.permalink = '/' + this.data.dateCreated.getDay() + '/' + this.data.dateCreated.getMonth() + '/' + this.data.dateCreated.getYear() + '/' + this.data.name;\n            this.save((err,done)=>{\n                return callback(err,done);\n            });\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 78,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "blog",
    "memberof": "app/flat-lib/blog/blog.js",
    "longname": "app/flat-lib/blog/blog.js~blog",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/blog/blog.js",
    "importStyle": "blog",
    "description": "This class defines each blog post",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/blog/blog.js~blog",
    "longname": "app/flat-lib/blog/blog.js~blog#create",
    "access": null,
    "description": "Create a new blog post",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "the title of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "author",
        "description": "the author of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "the content of the blog"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "the tags of the blog"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/blog/blogManager.js",
    "memberof": null,
    "longname": "app/flat-lib/blog/blogManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport blog from './blog.js';\n\n/**\n * Class to manage all of the blog posts\n * @extends {manager}\n */\nexport default class blogManager extends manager {\n\n     /**\n     * Create a new blog post\n     * @override\n     * @param {string} name - the name of the blog\n     * @param {string} title - the title of the blog\n     * @param {string} author - the author of the blog\n     * @param {string} content - the content of the blog\n     * @param {array} tags - the tags of the blog\n     * @param {function(err:error,done:boolean)} callback - the callback function\n     * @return {function} the callback function\n     */\n    create(name,title,author,content,tags,callback){\n        var newBlog = new blog(this.dir);\n        newBlog.create(name,title,author,content,tags,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(newBlog);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Int all of the blogs \n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new blog(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    \n    }\n}\n"
  },
  {
    "__docId__": 81,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "blogManager",
    "memberof": "app/flat-lib/blog/blogManager.js",
    "longname": "app/flat-lib/blog/blogManager.js~blogManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/blog/blogManager.js",
    "importStyle": "blogManager",
    "description": "Class to manage all of the blog posts",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/blog/blogManager.js~blogManager",
    "longname": "app/flat-lib/blog/blogManager.js~blogManager#create",
    "access": null,
    "description": "Create a new blog post",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "the title of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "author",
        "description": "the author of the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "the content of the blog"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "tags",
        "description": "the tags of the blog"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/blog/blogManager.js~blogManager",
    "longname": "app/flat-lib/blog/blogManager.js~blogManager#init",
    "access": null,
    "description": "Int all of the blogs ",
    "lineNumber": 39,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/blogTemplate/blogTemplate.js",
    "memberof": null,
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * Class that stores info on the current blog list template\n */\nexport default class blogTemplate {\n\n    /**\n     * @constructor\n     * @param {string} dir - the directory for the json file\n     * @param {string} file - the file to write to\n     */\n    constructor(dir,file){\n\n        /**\n         * The file directory\n         * @type {string}\n         */\n        this._dir = dir;\n\n        //check that the dir exitsts\n        try {\n            var stat = fs.statSync(this._dir);\n        } catch(err){\n            if(err.code === 'ENOENT'){\n                fs.mkdirSync(this._dir);\n            } else {\n                console.dir(err);\n            }\n        }\n\n        /**\n         * The file to save to\n         * @type {string}\n         */\n        this._file = file;\n        \n        /**\n         * The data object\n         * @type {object}\n         */\n        this._data = {};\n\n        /**\n         * The current blog template\n         * @type {string}\n         */\n        this._data.template = '';\n\n        /**\n         * The number of blogs per list page\n         * @type {number}\n         */\n        this._data.numPerPage = 10;\n\n        /**\n         * The cache page to use for rendering\n         * @type {string}\n         */\n        this._data.cache = '';\n\n        /**\n         * The inernal string where the blog html is held\n         * @type {string}\n         */\n        this._data.blogHtml = '';\n\n        /**\n         * The blog list internal html\n         * @type {string}\n         */\n        this._data.blogListHtml = '';\n\n        //try to read a file if it is on disk\n        try {\n            this._data = JSON.parse(fs.readFileSync(this._dir+this._file,'utf8'));\n        } catch(err){\n\n        }\n\n    }\n\n    /**\n     * Save the file to disk\n     */\n    save(){\n        fs.writeFileSync(this._dir+this._file,JSON.stringify(this._data),'utf8');\n    }\n\n    /**\n     * Convert the data to a json string\n     * @return {string} the json string of the data object\n     */\n    toString(){\n        return JSON.stringify(this._data,null,2);\n    }\n\n\n    /**\n     * Set the currents number of blogs per page\n     * @param {number} num - the new number of blogs per page\n     */\n    set numPerPage(num){\n        this._data.numPerPage = num;\n    }\n\n    /**\n     * Get the number of blogs per page\n     * @return {number} the number of blogs per page\n     */\n    get numPerPage(){\n        return this._data.numPerPage;\n    }\n\n    /**\n     * Set the current blog cache file\n     * @param {string} str - the string of the blog cache\n     */\n    set cache(str){\n        this._data.cache = str;\n        //get the blog substring\n        let start = this._data.cache.indexOf('<$$blog$$>');\n        let end = this._data.cache.indexOf('</$$blog$$>') + '</$$blog$$>'.length;\n\n        if(start !== -1 && end !== -1){\n            this._data.blogHtml = this._data.cache.substring(start,end);\n            this._data.cache = this._data.cache.replace(this._data.blogHtml,'<BLOGDATA/>');\n            this._data.blogHtml = this._data.blogHtml.replace('<\\$\\$blog\\$\\$>','').replace('</\\$\\$blog\\$\\$>','');\n        }\n\n        start = this._data.cache.indexOf('<$$blogList$$>');\n        end = this._data.cache.indexOf('</$$blogList$$>') + '</$$blogList$$>'.length;\n        if(start !== -1 && end !== -1){\n            this._data.blogListHtml = this._data.cache.substring(start,end);\n            this._data.cache = this._data.cache.replace(this._data.blogListHtml,'<BLOGLIST/>');\n            this._data.blogListHtml = this._data.blogListHtml.replace('<\\$\\$blogList\\$\\$>','').replace('</\\$\\$blogList\\$\\$>','');\n        }\n    }\n\n    /**\n     * Get the blog cache file\n     * @return {string} the blog cache\n     */\n    get cache(){\n        return this._data.cache;\n    }\n\n    /**\n     * Get the blog html\n     * @return {string} the inner blog html for lists\n     */\n    get blogHtml(){\n        return this._data.blogHtml;\n    }\n\n    /**\n     * Set the blog html\n     * @param {string} html - the new blog html string\n     */\n    set blogHtml(html){\n        this._data.blogHtml = html;\n    }\n\n    /**\n     * Get the blog List Html\n     * @return {string} the blog list html\n     */\n    get blogListHtml(){\n        return this._data.blogListHtml;\n    }\n\n    /**\n     * Set the blog list html\n     * @param {string} html - the new blog list html\n     */\n    set blogListHtml(html){\n        this._data.blogListHtml = html;\n    }\n\n\n\n}\n"
  },
  {
    "__docId__": 85,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "blogTemplate",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/blogTemplate/blogTemplate.js",
    "importStyle": "blogTemplate",
    "description": "Class that stores info on the current blog list template",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory for the json file"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "the file to write to"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dir",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#_dir",
    "access": null,
    "description": "The file directory",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_file",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#_file",
    "access": null,
    "description": "The file to save to",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#_data",
    "access": null,
    "description": "The data object",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#_data",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#save",
    "access": null,
    "description": "Save the file to disk",
    "lineNumber": 89,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#toString",
    "access": null,
    "description": "Convert the data to a json string",
    "lineNumber": 97,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the json string of the data object"
    },
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "numPerPage",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#numPerPage",
    "access": null,
    "description": "Set the currents number of blogs per page",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": "the new number of blogs per page"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "numPerPage",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#numPerPage",
    "access": null,
    "description": "Get the number of blogs per page",
    "lineNumber": 114,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "the number of blogs per page"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "cache",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#cache",
    "access": null,
    "description": "Set the current blog cache file",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "the string of the blog cache"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "cache",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#cache",
    "access": null,
    "description": "Get the blog cache file",
    "lineNumber": 147,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the blog cache"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogHtml",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#blogHtml",
    "access": null,
    "description": "Get the blog html",
    "lineNumber": 155,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the inner blog html for lists"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogHtml",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#blogHtml",
    "access": null,
    "description": "Set the blog html",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": "the new blog html string"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogListHtml",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#blogListHtml",
    "access": null,
    "description": "Get the blog List Html",
    "lineNumber": 171,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the blog list html"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogListHtml",
    "memberof": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate",
    "longname": "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate#blogListHtml",
    "access": null,
    "description": "Set the blog list html",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": "the new blog list html"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/cache/cache.js",
    "memberof": null,
    "longname": "app/flat-lib/cache/cache.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * This class manages the rendered cache files\n * @extends {item}\n */\nexport default class cache extends item {\n\n    /**\n     * Create a new cache\n     * @override\n     * @param {string} permalink - the url of the cache\n     * @param {string} fileStr - the string of the file\n     * @param {function(err:error,done:boolean)} callback - done is true if the item was created\n     * @return {function} the callback function\n     */\n    create(permalink,fileStr,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.permalink = permalink\n            this.data.fileStr = fileStr;\n            this.data.dateCreated = new Date();\n            this.save((err,done)=>{\n                return callback(err,done);\n            });\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 102,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "cache",
    "memberof": "app/flat-lib/cache/cache.js",
    "longname": "app/flat-lib/cache/cache.js~cache",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/cache/cache.js",
    "importStyle": "cache",
    "description": "This class manages the rendered cache files",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 103,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/cache/cache.js~cache",
    "longname": "app/flat-lib/cache/cache.js~cache#create",
    "access": null,
    "description": "Create a new cache",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the url of the cache"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileStr",
        "description": "the string of the file"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the item was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/cache/cacheManager.js",
    "memberof": null,
    "longname": "app/flat-lib/cache/cacheManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport cache from './cache.js';\n\n/**\n * This is the file memory store of the generated pages\n * @extends {manager}\n */\nexport default class cacheManager extends manager {\n\n    /**\n     * Create a new cache\n     * @override\n     * @param {string} permalink - the permalink of the page\n     * @param {string} fileStr - the string of the page\n     * @param {function(err:error,done:boolean)} callback - the callback function\n     * @return {function} the callback\n     */\n    create(permalink,fileStr,callback){\n        var newCache = new cache(this.dir);\n        newCache.create(permalink,fileStr,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(newCache);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Int all of the caches \n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new cache(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n    /**\n     * Retrive a certian number of items based\n     * @param {number} start - the starting number in the loop\n     * @param {number} total - the total number to collect\n     * @return {string} the items collected as the filestr\n     */\n    getSelection(start,total){\n        var ret = '';\n        if(start > 0){\n            start = (start*total)-1;\n        }\n        for(let i=start,n=0; n<total; n++){\n            if(i >= this.items.length){\n                break;\n            }\n            ret += this.items[i].get('fileStr');\n            i++;\n        }\n        return ret;\n    }   \n    \n}\n"
  },
  {
    "__docId__": 105,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "cacheManager",
    "memberof": "app/flat-lib/cache/cacheManager.js",
    "longname": "app/flat-lib/cache/cacheManager.js~cacheManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/cache/cacheManager.js",
    "importStyle": "cacheManager",
    "description": "This is the file memory store of the generated pages",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 106,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/cache/cacheManager.js~cacheManager",
    "longname": "app/flat-lib/cache/cacheManager.js~cacheManager#create",
    "access": null,
    "description": "Create a new cache",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the permalink of the page"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileStr",
        "description": "the string of the page"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/cache/cacheManager.js~cacheManager",
    "longname": "app/flat-lib/cache/cacheManager.js~cacheManager#init",
    "access": null,
    "description": "Int all of the caches ",
    "lineNumber": 36,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSelection",
    "memberof": "app/flat-lib/cache/cacheManager.js~cacheManager",
    "longname": "app/flat-lib/cache/cacheManager.js~cacheManager#getSelection",
    "access": null,
    "description": "Retrive a certian number of items based",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "the starting number in the loop"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "total",
        "description": "the total number to collect"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the items collected as the filestr"
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/config/config.js",
    "memberof": null,
    "longname": "app/flat-lib/config/config.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * This class manages the config for the entrie site\n */\nexport default class config {\n\n    /**\n     * Load the config class\n     * @constructor\n     * @param {string} filename - the config file\n     */\n    constructor(filename){\n        \n        /**\n         * The filename\n         * @type {string}\n         */\n        this.filename = filename;\n\n        /**\n         * The config object\n         * @type {object}\n         */\n        this._config = JSON.parse(fs.readFileSync(filename,'utf8'));\n\n    }\n\n    /**\n     * Get a config value\n     * @param {string} key - the key for the config value\n     * @return {object|array|date|number|boolean|null} - the value for the config key\n     */\n    getValue(key){\n        return this._config[key];\n    }\n\n    /**\n     * Set a value and syncronusly write to disk should'nt be done often\n     * @param {string} key - the name of the value to set\n     * @param {object|array|date|number|boolean|null} value - the value to set\n     */\n    setValue(key,value){\n        this._config[key] = value;\n        fs.writeFileSync(this.filename,JSON.stringify(this._config,null,2),'utf8');\n    }\n\n\n}\n"
  },
  {
    "__docId__": 110,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/config/config.js",
    "longname": "app/flat-lib/config/config.js~config",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/config/config.js",
    "importStyle": "config",
    "description": "This class manages the config for the entrie site",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/config/config.js~config",
    "longname": "app/flat-lib/config/config.js~config#constructor",
    "access": null,
    "description": "Load the config class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the config file"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "app/flat-lib/config/config.js~config",
    "longname": "app/flat-lib/config/config.js~config#filename",
    "access": null,
    "description": "The filename",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_config",
    "memberof": "app/flat-lib/config/config.js~config",
    "longname": "app/flat-lib/config/config.js~config#_config",
    "access": null,
    "description": "The config object",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getValue",
    "memberof": "app/flat-lib/config/config.js~config",
    "longname": "app/flat-lib/config/config.js~config#getValue",
    "access": null,
    "description": "Get a config value",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key for the config value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array",
        "date",
        "number",
        "boolean",
        "null"
      ],
      "spread": false,
      "description": "the value for the config key"
    },
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValue",
    "memberof": "app/flat-lib/config/config.js~config",
    "longname": "app/flat-lib/config/config.js~config#setValue",
    "access": null,
    "description": "Set a value and syncronusly write to disk should'nt be done often",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the name of the value to set"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "array",
          "date",
          "number",
          "boolean",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to set"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/controller.js",
    "memberof": null,
    "longname": "app/flat-lib/controller.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from './helpers/items/manager.js';\n\n/**\n * This class manages all of the managers\n */\nexport default class controller {\n\n    /**\n     * Add all of the managers into the class\n     * @constructor\n     * @param {pageManager} pageManager - the page manager\n     * @param {sectionManager} sectionManager - the section manager\n     * @param {sessionManager} sessionManager - the session manager\n     * @param {templateManager} templateManager - the template manager\n     * @param {userManager} userManager - the user manager\n     * @param {cacheManager} cacheManager - the cache manager\n     * @param {uploadManager} uploadManger - the uplaod manager\n     * @param {blogManager} blogManager - the blog manager\n     * @param {config} configManager - the config manager\n     * @param {info} infoManager - the info manager\n     * @param {uploadedFiles} uploadedFiles - the class that reads and writes files from the user\n     * @param {blogTemplate} blogTemplate - the blog template manager\n     * @param {cacheManager} blogCache - the cacheManager for blogs\n     * @param {cacheManager} blogListCache - the cache manager for the blog lists\n     */\n    constructor(pageManager,sectionManager,sessionManager,templateManager,userManager,cacheManager,uploadManager,blogManager,configManager,infoManager,uploadedFiles,blogTemplate,blogCache,blogListCache){\n\n        /**\n         * The page manager\n         * @type {pageManager}\n         */\n        this._pageManager = pageManager;\n\n        /**\n         * The Section Manager\n         * @type {sectionManager}\n         */\n        this._sectionManager = sectionManager;\n\n        /**\n         * The session manager\n         * @type {sessionManager}\n         */\n        this._sessionManager = sessionManager;\n\n        /**\n         * The template manager\n         * @type {templateManager}\n         */\n        this._templateManager = templateManager;\n\n        /**\n         * The user manager\n         * @type {userManager}\n         */\n        this._userManager = userManager;\n\n        /**\n         * The cache manager\n         * @type {cacheManager}\n         */\n        this._cacheManager = cacheManager;\n\n        /**\n         * The uplaod manager\n         * @type {uploadManager}\n         */\n        this._uploadManager = uploadManager;\n\n        /**\n         * The blog manager\n         * @type {blogManager}\n         */\n        this._blogManager = blogManager;\n\n        /**\n         * The config manager\n         * @type {config}\n         */\n        this._config = configManager;\n\n        /**\n         * The info manager\n         * @type {info}\n         */\n        this._info = infoManager;\n\n        /**\n         * The user file manager\n         * @type {uploadedFiles}\n         */\n        this._uploader = uploadedFiles;\n\n        /**\n         * The blog template manager\n         * @type {blogTemplate}\n         */\n        this._blogTemplate = blogTemplate;\n\n        /**\n         * The blog cache manager\n         * @type {cacheManager}\n         */\n        this._blogCache = blogCache; \n\n        /**\n         * The blog list cache manager\n         * @type {cacheManager}\n         */\n        this._blogListCache = blogListCache;\n\n    }\n\n    /**\n     * Get the page manager\n     * @return {pageManager} the page manager\n     */\n    get pageManager(){\n        return this._pageManager;\n    }\n\n    /**\n     * Set the pageManager\n     * @param {pageManager} manager - the page manager\n     */\n    set pageManager(manager){\n        this._pageManager = manager;\n    }\n\n    /**\n     * Get the section manager\n     * @return {sectionManager} the section manager\n     */\n    get sectionManager(){\n        return this._sectionManager;\n    }\n\n    /**\n     * Set the section manager\n     * @param {sectionManager} manager - the section manager\n     */\n    set sectionManager(manager){\n        this._sectionManager = manager;\n    }\n\n    /**\n     * Get the session manager\n     * @return {sessionManager} the session manager\n     */\n    get sessionManager(){\n        return this._sessionManager;\n    }\n\n    /**\n     * Set the session manager\n     * @param {sessionManager} manager - the session manager\n     */\n    set sessionManager(manager){\n        this._sessionManager = manager;\n    }\n\n    /**\n     * Get the template manager\n     * @return {templateManager} the template manager\n     */\n    get templateManager(){\n        return this._templateManager;\n    }\n\n    /**\n     * Set the template manager\n     * @param {templateManager} manager - the template manager\n     */\n    set templateManager(manager){\n        this._templateManager = manager;\n    }\n\n    /**\n     * Get the user manager\n     * @return {userManager} the user manager\n     */\n    get userManager(){\n        return this._userManager;\n    }\n\n    /**\n     * Set the user manager\n     * @param {userManager} userManager - the user manager\n     */\n    set userManager(userManager){\n        this._userManager = manager;\n    }\n\n    /**\n     * Get the cache manager\n     * @return {cacheManager} the cache manager\n     */\n    get cacheManager(){\n        return this._cacheManager;\n    }\n\n    /**\n     * Set the cache manager\n     * @param {cacheManager} manager - the cache manager\n     */\n    set cacheManager(manager){\n        this._cacheManager = manager;\n    }\n\n    /**\n     * Get the upload manager\n     * @return {uploadManger} the upload manager\n     */\n    get uploadManager(){\n        return this._uploadManager;\n    }\n\n    /**\n     * Set the upload manager\n     * @param {uploadManager} manager - the upload manager\n     */\n    set uploadManager(manager){\n        this._uploadManager = manager;\n    }\n\n    /**\n     * Get the blog manager\n     * @return {blogManager} - the blog manager\n     */\n    get blogManager(){\n        return this._blogManager;\n    }\n\n    /**\n     * Set the blog manager\n     * @param {blogManager} manager - the blog manager\n     */\n    set blogManager(manager){\n        this._blogManager = manager;\n    }\n\n    /**\n     * set the config manager\n     * @param {config} manager - the config manager\n     */\n    set config(manager){\n        this._config = manager;\n    }\n\n    /**\n     * get the config manager\n     * @return {config} the config manager\n     */\n    get config(){\n        return this._config;\n    }\n\n    /**\n     * Set the info manager\n     * @param {info} manager - the info manager\n     */\n    set info(manager){\n        this._info = manager;\n    }\n\n    /**\n     * Get the info manager\n     * @return {info} the info manager\n     */\n    get info(){\n        return this._info;\n    }\n\n    /**\n     * Set the user file manager\n     * @param {uploadedFiles} manager - the user file manager\n     */\n    set uploader(manager){\n        this._uploader = manager;\n    }\n\n    /**\n     * Get the user file manager\n     * @return {uploadedFiles} the user file manager\n     */\n    get uploader(){\n        return this._uploader;\n    }\n\n    /**\n     * Set the blog template manager\n     * @param {blogTemplate} manager - the blog template manager\n     */\n    set blogTemplate(manager){\n        this._blogTemplate = manager;\n    }\n\n    /**\n     * Get the blog template manager\n     * @return {blogTemplate} the blog template manager\n     */\n    get blogTemplate(){\n        return this._blogTemplate;\n    }\n\n    /**\n     * Get the blog cache\n     * @type {cacheManager}\n     */\n    get blogCache(){\n        return this._blogCache;\n    }\n\n    /**\n     * Set the blog cache\n     * @param {cacheManager} manager - the blog cache manager\n     */\n    set blogCache(manager){\n        this._blogCache = manager;\n    }\n\n    /**\n     * Get the blog list cache\n     * @return {cacheManager} - the blog list cache manager\n     */\n    get blogListCache(){\n        return this._blogListCache;\n    }\n\n    /**\n     * Set the blog list cache\n     * @param {cacheManager} manager - the blog list cache manager\n     */\n    set blogListCache(manager){\n        this._blogListCache = manager;\n    }\n\n    /**\n     * Init all of the managers\n     */\n    init(){\n        this._pageManager.init();\n        this._sectionManager.init();\n        this._sessionManager.init();\n        this._templateManager.init();\n        this._userManager.init();\n        this._cacheManager.init();\n        this._uploadManager.init();\n        this._blogManager.init();\n        this._blogCache.init();\n        this._blogListCache.init();\n    }\n\n\n}\n"
  },
  {
    "__docId__": 117,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-lib/controller.js",
    "longname": "app/flat-lib/controller.js~controller",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/controller.js",
    "importStyle": "controller",
    "description": "This class manages all of the managers",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 118,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#constructor",
    "access": null,
    "description": "Add all of the managers into the class",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "pageManager"
        ],
        "spread": false,
        "optional": false,
        "name": "pageManager",
        "description": "the page manager"
      },
      {
        "nullable": null,
        "types": [
          "sectionManager"
        ],
        "spread": false,
        "optional": false,
        "name": "sectionManager",
        "description": "the section manager"
      },
      {
        "nullable": null,
        "types": [
          "sessionManager"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionManager",
        "description": "the session manager"
      },
      {
        "nullable": null,
        "types": [
          "templateManager"
        ],
        "spread": false,
        "optional": false,
        "name": "templateManager",
        "description": "the template manager"
      },
      {
        "nullable": null,
        "types": [
          "userManager"
        ],
        "spread": false,
        "optional": false,
        "name": "userManager",
        "description": "the user manager"
      },
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "cacheManager",
        "description": "the cache manager"
      },
      {
        "nullable": null,
        "types": [
          "uploadManager"
        ],
        "spread": false,
        "optional": false,
        "name": "uploadManger",
        "description": "the uplaod manager"
      },
      {
        "nullable": null,
        "types": [
          "blogManager"
        ],
        "spread": false,
        "optional": false,
        "name": "blogManager",
        "description": "the blog manager"
      },
      {
        "nullable": null,
        "types": [
          "config"
        ],
        "spread": false,
        "optional": false,
        "name": "configManager",
        "description": "the config manager"
      },
      {
        "nullable": null,
        "types": [
          "info"
        ],
        "spread": false,
        "optional": false,
        "name": "infoManager",
        "description": "the info manager"
      },
      {
        "nullable": null,
        "types": [
          "uploadedFiles"
        ],
        "spread": false,
        "optional": false,
        "name": "uploadedFiles",
        "description": "the class that reads and writes files from the user"
      },
      {
        "nullable": null,
        "types": [
          "blogTemplate"
        ],
        "spread": false,
        "optional": false,
        "name": "blogTemplate",
        "description": "the blog template manager"
      },
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "blogCache",
        "description": "the cacheManager for blogs"
      },
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "blogListCache",
        "description": "the cache manager for the blog lists"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pageManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_pageManager",
    "access": null,
    "description": "The page manager",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "pageManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sectionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_sectionManager",
    "access": null,
    "description": "The Section Manager",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "sectionManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sessionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_sessionManager",
    "access": null,
    "description": "The session manager",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "sessionManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_templateManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_templateManager",
    "access": null,
    "description": "The template manager",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "templateManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_userManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_userManager",
    "access": null,
    "description": "The user manager",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "userManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_cacheManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_cacheManager",
    "access": null,
    "description": "The cache manager",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_uploadManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_uploadManager",
    "access": null,
    "description": "The uplaod manager",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "uploadManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogManager",
    "access": null,
    "description": "The blog manager",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "blogManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_config",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_config",
    "access": null,
    "description": "The config manager",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "config"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_info",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_info",
    "access": null,
    "description": "The info manager",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "info"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_uploader",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_uploader",
    "access": null,
    "description": "The user file manager",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "uploadedFiles"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogTemplate",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogTemplate",
    "access": null,
    "description": "The blog template manager",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "blogTemplate"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogCache",
    "access": null,
    "description": "The blog cache manager",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogListCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogListCache",
    "access": null,
    "description": "The blog list cache manager",
    "lineNumber": 113,
    "type": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "pageManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#pageManager",
    "access": null,
    "description": "Get the page manager",
    "lineNumber": 121,
    "return": {
      "nullable": null,
      "types": [
        "pageManager"
      ],
      "spread": false,
      "description": "the page manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "pageManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#pageManager",
    "access": null,
    "description": "Set the pageManager",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "pageManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the page manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pageManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_pageManager",
    "access": null,
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "sectionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#sectionManager",
    "access": null,
    "description": "Get the section manager",
    "lineNumber": 137,
    "return": {
      "nullable": null,
      "types": [
        "sectionManager"
      ],
      "spread": false,
      "description": "the section manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "sectionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#sectionManager",
    "access": null,
    "description": "Set the section manager",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "sectionManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the section manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sectionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_sectionManager",
    "access": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "sessionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#sessionManager",
    "access": null,
    "description": "Get the session manager",
    "lineNumber": 153,
    "return": {
      "nullable": null,
      "types": [
        "sessionManager"
      ],
      "spread": false,
      "description": "the session manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "sessionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#sessionManager",
    "access": null,
    "description": "Set the session manager",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "sessionManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the session manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sessionManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_sessionManager",
    "access": null,
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "templateManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#templateManager",
    "access": null,
    "description": "Get the template manager",
    "lineNumber": 169,
    "return": {
      "nullable": null,
      "types": [
        "templateManager"
      ],
      "spread": false,
      "description": "the template manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "templateManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#templateManager",
    "access": null,
    "description": "Set the template manager",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "templateManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the template manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_templateManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_templateManager",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "userManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#userManager",
    "access": null,
    "description": "Get the user manager",
    "lineNumber": 185,
    "return": {
      "nullable": null,
      "types": [
        "userManager"
      ],
      "spread": false,
      "description": "the user manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "userManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#userManager",
    "access": null,
    "description": "Set the user manager",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "userManager"
        ],
        "spread": false,
        "optional": false,
        "name": "userManager",
        "description": "the user manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_userManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_userManager",
    "access": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "cacheManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#cacheManager",
    "access": null,
    "description": "Get the cache manager",
    "lineNumber": 201,
    "return": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": "the cache manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "cacheManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#cacheManager",
    "access": null,
    "description": "Set the cache manager",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the cache manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_cacheManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_cacheManager",
    "access": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "uploadManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#uploadManager",
    "access": null,
    "description": "Get the upload manager",
    "lineNumber": 217,
    "return": {
      "nullable": null,
      "types": [
        "uploadManger"
      ],
      "spread": false,
      "description": "the upload manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "uploadManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#uploadManager",
    "access": null,
    "description": "Set the upload manager",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "uploadManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the upload manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_uploadManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_uploadManager",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogManager",
    "access": null,
    "description": "Get the blog manager",
    "lineNumber": 233,
    "return": {
      "nullable": null,
      "types": [
        "blogManager"
      ],
      "spread": false,
      "description": "the blog manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogManager",
    "access": null,
    "description": "Set the blog manager",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "blogManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the blog manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogManager",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogManager",
    "access": null,
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#config",
    "access": null,
    "description": "set the config manager",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "config"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the config manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_config",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_config",
    "access": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#config",
    "access": null,
    "description": "get the config manager",
    "lineNumber": 257,
    "return": {
      "nullable": null,
      "types": [
        "config"
      ],
      "spread": false,
      "description": "the config manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "info",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#info",
    "access": null,
    "description": "Set the info manager",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "info"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the info manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_info",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_info",
    "access": null,
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "info",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#info",
    "access": null,
    "description": "Get the info manager",
    "lineNumber": 273,
    "return": {
      "nullable": null,
      "types": [
        "info"
      ],
      "spread": false,
      "description": "the info manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "uploader",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#uploader",
    "access": null,
    "description": "Set the user file manager",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "uploadedFiles"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the user file manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_uploader",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_uploader",
    "access": null,
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "uploader",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#uploader",
    "access": null,
    "description": "Get the user file manager",
    "lineNumber": 289,
    "return": {
      "nullable": null,
      "types": [
        "uploadedFiles"
      ],
      "spread": false,
      "description": "the user file manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogTemplate",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogTemplate",
    "access": null,
    "description": "Set the blog template manager",
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "blogTemplate"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the blog template manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogTemplate",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogTemplate",
    "access": null,
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogTemplate",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogTemplate",
    "access": null,
    "description": "Get the blog template manager",
    "lineNumber": 305,
    "return": {
      "nullable": null,
      "types": [
        "blogTemplate"
      ],
      "spread": false,
      "description": "the blog template manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogCache",
    "access": null,
    "description": "Get the blog cache",
    "lineNumber": 313,
    "type": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogCache",
    "access": null,
    "description": "Set the blog cache",
    "lineNumber": 321,
    "params": [
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the blog cache manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogCache",
    "access": null,
    "description": null,
    "lineNumber": 322,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "blogListCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogListCache",
    "access": null,
    "description": "Get the blog list cache",
    "lineNumber": 329,
    "return": {
      "nullable": null,
      "types": [
        "cacheManager"
      ],
      "spread": false,
      "description": "the blog list cache manager"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "blogListCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#blogListCache",
    "access": null,
    "description": "Set the blog list cache",
    "lineNumber": 337,
    "params": [
      {
        "nullable": null,
        "types": [
          "cacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "manager",
        "description": "the blog list cache manager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_blogListCache",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#_blogListCache",
    "access": null,
    "description": null,
    "lineNumber": 338,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/controller.js~controller",
    "longname": "app/flat-lib/controller.js~controller#init",
    "access": null,
    "description": "Init all of the managers",
    "lineNumber": 344,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 176,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/blogRender.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/blogRender.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport blogReplace from './blogReplace.js';\n\n/**\n * Function To Render a single blog page\n * @param {blog} blog - the blog class to pass in\n * @param {string} layout - the layout to use on the blog\n * @param {string} blogHtml - the blog html\n * @param {string} blogCacheHtml - the blog list cache html\n * @param {function(cacheString:string,cacheListString:string)} callback - returns the cachestring and the list cache string\n * @return {function} the callback function\n */\nexport default function blogRender(blog,layout,blogHtml,blogCacheHtml,callback){\n\n    let toReplace = {\n        '$$theTitle$$' : blog.get('title'),\n        '$$theAuthor$$' : blog.get('author'),\n        '$$theContent$$' : blog.get('content'),\n        '$$theTags$$' : blog.get('tags').join(' '),\n        '$$theDate$$' : blog.get('dateCreated')\n    };\n    let layout2 = layout;\n    let str = blogReplace(toReplace,blogHtml);\n    toReplace['$$theLink$$'] = '/blog' + blog.get('permalink');\n    let str2 = blogReplace(toReplace,blogCacheHtml);\n    return callback(layout.replace('<BLOGDATA/>',str).replace('<BLOGLIST/>',''),layout2.replace('<BLOGLIST/>',str2).replace('<BLOGDATA/>',''));\n}\n"
  },
  {
    "__docId__": 177,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "blogRender",
    "memberof": "app/flat-lib/helpers/blogRender.js",
    "longname": "app/flat-lib/helpers/blogRender.js~blogRender",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/blogRender.js",
    "importStyle": "blogRender",
    "description": "Function To Render a single blog page",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "blog"
        ],
        "spread": false,
        "optional": false,
        "name": "blog",
        "description": "the blog class to pass in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the layout to use on the blog"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "blogHtml",
        "description": "the blog html"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "blogCacheHtml",
        "description": "the blog list cache html"
      },
      {
        "nullable": null,
        "types": [
          "function(cacheString:string,cacheListString:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns the cachestring and the list cache string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 178,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/blogReplace.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/blogReplace.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Replaces object name with object value and passes back rendered layout\n * @param {object} toReplace - the replaces in the layout\n * @param {string} layout - the layout to replace\n * @return {string} the rendered layout\n */\nexport default function blogReplace(toReplace,layout){\n    //@TODO CHNAGE THIS AND ALL OTHERS\n    for(let key in toReplace){\n        layout = layout.replace(key,toReplace[key]);\n    }\n    return layout;\n}\n"
  },
  {
    "__docId__": 179,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "blogReplace",
    "memberof": "app/flat-lib/helpers/blogReplace.js",
    "longname": "app/flat-lib/helpers/blogReplace.js~blogReplace",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/blogReplace.js",
    "importStyle": "blogReplace",
    "description": "Replaces object name with object value and passes back rendered layout",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "toReplace",
        "description": "the replaces in the layout"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the layout to replace"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the rendered layout"
    },
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/emailVal.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/emailVal.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Check if the email is valid based on regex\n * @param {string} email - the email to check\n * @return {boolean} if the email is valid\n */\nexport default function emailVal(email){\n    var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    return re.test(email);\n}\n"
  },
  {
    "__docId__": 181,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "emailVal",
    "memberof": "app/flat-lib/helpers/emailVal.js",
    "longname": "app/flat-lib/helpers/emailVal.js~emailVal",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/emailVal.js",
    "importStyle": "emailVal",
    "description": "Check if the email is valid based on regex",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "the email to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the email is valid"
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/fileManager.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/fileManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * Handel the loading and saving of files for users,sessions,pages,sections\n */\nexport default class fileManager {\n\n    /**\n     * @constructor\n     * @param {string} dir - the directory of the files\n     */\n    constructor(dir){\n\n        /**\n         * The directory of the files\n         * @type {string}\n         */\n        this.dir = dir;\n        \n\n    }\n\n    /**\n     * Save an object to the disk\n     * @param {string} name - the name of the file\n     * @param {object} obj - the object to be saved\n     * @param {function(err:error,done:boolean)} callback - the callback function returns done or error if an error saving\n     * @return {function} the callback function\n     */\n    save(name,obj,callback){\n        var file = this.dir + name;\n        try {\n            obj = JSON.stringify(obj);\n        } catch(err){\n            return callback(err,null);\n        }\n        fs.writeFile(file,obj,'utf8',(err)=>{\n            if(err){\n                console.log(err);\n                return callback(err,null);\n            }\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Load an object from disk\n     * @param {string} name - the name of the file\n     * @param {function(err:error,obj:object)} callback - callback function shows if error or the object loaded\n     * @return {function} the callback function\n     */\n    load(name,callback){\n        var file = this.dir + file;\n        fs.readFile(file,'utf8',(err,data)=>{\n            if(err){\n                return callback(err,null);\n            }\n            try {\n                var obj = JSON.parse(data);\n            } catch(err){\n                console.log(err);\n                return callback(err,null);\n            }\n            return callback(null,obj);\n        });\n    }\n\n    /**\n     * Remove an object from disk\n     * @param {string} name - the name of the file\n     * @param {function(err:error,done:boolean)} callback - the callback if the file was deleted or not\n     * @return {function} the callback function\n     */\n    unlink(name,callback){\n        fs.unlink(this.dir+name,(err)=>{\n            if(err){\n                return callback(err,null);\n            }\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Remove an object from disk syncronously\n     * @param {string} name - the name of the file\n     */\n    unlinkSync(name){\n        try {\n            fs.unlinkSync(this.dir+name);\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n\n}\n"
  },
  {
    "__docId__": 183,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "fileManager",
    "memberof": "app/flat-lib/helpers/fileManager.js",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/fileManager.js",
    "importStyle": "fileManager",
    "description": "Handel the loading and saving of files for users,sessions,pages,sections",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory of the files"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 185,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dir",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#dir",
    "access": null,
    "description": "The directory of the files",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#save",
    "access": null,
    "description": "Save an object to the disk",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the file"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object to be saved"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function returns done or error if an error saving"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#load",
    "access": null,
    "description": "Load an object from disk",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the file"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,obj:object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function shows if error or the object loaded"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlink",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#unlink",
    "access": null,
    "description": "Remove an object from disk",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the file"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback if the file was deleted or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 189,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlinkSync",
    "memberof": "app/flat-lib/helpers/fileManager.js~fileManager",
    "longname": "app/flat-lib/helpers/fileManager.js~fileManager#unlinkSync",
    "access": null,
    "description": "Remove an object from disk syncronously",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the file"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/flatLog.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/flatLog.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * Class to log incoming requests to file and console\n */\nexport default class flatLog {\n\n    /*\n     * @constructor\n     * @param {string} dir - the dir to store the log files\n     * @param {boolean} console - log to console if true\n     */\n    constructor(dir,console){\n\n        /**\n         * The dir we save the logs to\n         * @type {string}\n         */\n        this._dir = dir;\n\n        //make sure the dir exists\n        if(!fs.existsSync(dir)){\n            fs.mkdirSync(dir);\n        }\n\n        /**\n         * The boolean if we log to console\n         * @type {boolean}\n         */\n        this._console = console;\n\n        /**\n         * The non 200,300 log\n         * @type {string}\n         */\n        this.errorLog = 'error.log'\n\n        /**\n         * The 200,300 log\n         * @type {string}\n         */\n        this.accessLog = 'access.log'\n\n    }\n\n    /**\n     * Log a request\n     * @return {function(req:object,res:object,next:function)} - the standard for middlewear\n     */\n    log(){\n        return (req,res,next)=>{\n            req.startTime = new Date();\n            res.on('finish',()=>{\n                var done = new Date();\n                var logObj = {\n                    status: res.statusCode,\n                    method : req.method,\n                    ms : (done - req.startTime),\n                    url : req.url,\n                    ip : req.headers['x-real-ip'],\n                    userAgent : req.headers['user-agent'],\n                    date : done    \n                };\n                if(this._console === \"true\"){\n                    console.dir(logObj);\n                }\n                var strCode = res.statusCode.toString();\n                if(strCode[0] === '3' || strCode[0] === '2'){\n                    var file = this.accessLog;\n                } else {\n                    var file = this.errorLog;\n                }\n                fs.appendFile(this._dir+file,JSON.stringify(logObj).replace('{','').replace('}','')+'\\n','utf8',(err)=>{\n                    if(err){\n                        console.dir(err);\n                    }\n                });\n            });\n            next();\n        }\n    }\n\n\n}\n"
  },
  {
    "__docId__": 191,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "flatLog",
    "memberof": "app/flat-lib/helpers/flatLog.js",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/flatLog.js",
    "importStyle": "flatLog",
    "description": "Class to log incoming requests to file and console",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 192,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "dir",
        "types": [
          "*"
        ]
      },
      {
        "name": "console",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dir",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#_dir",
    "access": null,
    "description": "The dir we save the logs to",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_console",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#_console",
    "access": null,
    "description": "The boolean if we log to console",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "errorLog",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#errorLog",
    "access": null,
    "description": "The non 200,300 log",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "accessLog",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#accessLog",
    "access": null,
    "description": "The 200,300 log",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "app/flat-lib/helpers/flatLog.js~flatLog",
    "longname": "app/flat-lib/helpers/flatLog.js~flatLog#log",
    "access": null,
    "description": "Log a request",
    "lineNumber": 53,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "function(req:object,res:object,next:function)"
      ],
      "spread": false,
      "description": "the standard for middlewear"
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/idGen.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/idGen.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport crypto from 'crypto';\n\n/**\n * Generate a random id used by users and sessions\n * @param {function(err:err,id:string)} callback - the function which returns the id or error if there was an issue with crypto\n * @return {function} the callback function\n */\nexport default function idGen(callback){\n    crypto.randomBytes(5,(err,bytes)=>{\n        if(err){\n            return callback(err,null);\n        }\n        var id = crypto.createHash('sha512');\n        id.update(bytes.toString(),'utf8');\n        id.update(new Date().getTime().toString(),'utf8');\n        return callback(null,id.digest('hex'));\n    });\n}\n"
  },
  {
    "__docId__": 199,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "idGen",
    "memberof": "app/flat-lib/helpers/idGen.js",
    "longname": "app/flat-lib/helpers/idGen.js~idGen",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/idGen.js",
    "importStyle": "idGen",
    "description": "Generate a random id used by users and sessions",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:err,id:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the function which returns the id or error if there was an issue with crypto"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 200,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/items/item.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/items/item.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport idGen from '../idGen.js';\nimport fileManager from '../fileManager.js';\n\n/**\n * This class is to be used for users,sessions,pages,sections it provides a template for all to extend\n */\nexport default class item {\n\n    /**\n     * @constructor\n     * @param {string} dir - the directory of the item\n     * @param {string} filename - the filename of the item\n     * @param {object} data - the data of the item\n     */\n    constructor(dir,filename,data){\n\n        /**\n         * The filename of the item\n         * @type {string}\n         */\n        this.filename = filename || '';\n\n        /**\n         * The id of the item, the filename without .json\n         */\n        this.id = '';\n        \n        if(this.filename !== ''){\n            this.id = this.filename.replace('.json','');\n        }\n\n        /**\n         * The data of the item\n         * @type {object}\n         */\n        this.data = data || {};\n\n        /**\n         * The filemanger for the object\n         * @type {object}\n         */\n        this.fileManager = new fileManager(dir);\n\n        /**\n         * The id generator\n         * @type function\n         */\n        this.idGen = idGen;\n\n    }\n\n    /**\n     * This method is diferent depening on the sub class\n     * @abstract\n     */\n    create(){\n\n    }\n\n    /**\n     * Save the object to disk\n     * @param {function(err:error,done:boolean)} callback - if the file was saved or not\n     * @return {function} the callback if error or if the file saved\n     */\n    save(callback){\n        this.fileManager.save(this.filename,this.data,(err,done)=>{\n            return callback(err,done);\n        });\n    }\n\n    /**\n     * Load a file from disk\n     * @param {function(err:error,done:boolean)} callback - if the file was loaded or not\n     * @return {function} the callack if the file loaded or not\n     */\n    load(callback){\n        this.fileManager.load(this.filename,(err,obj)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data = obj;\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Remove a file from disk\n     * @param {function(err:error,done:boolean)} callback - if the file was deleted or error\n     * @return {function} the callback function\n     */\n    unlink(callback){\n        this.fileManager.unlink(this.filename,(err,done)=>{\n            return callback(err,done);\n        });\n    }\n\n    /**\n     * Remove File from the disk syncronusly\n     */\n    unlinkSync(){\n        this.fileManager.unlinkSync(this.filename);\n    }\n\n    /**\n     * Generate an id and filename\n     * @return {function(err:error,done:boolean)} the callback if the id was generated or not\n     */\n    genId(callback){\n        if(this.filename === '' && this.id === ''){\n            this.idGen((err,id)=>{\n                this.id = id;\n                this.filename = id+'.json';\n                return callback(null,true);\n            });\n        } else {\n            return callback(new Error(\"Id allready generated\"),null);\n        }\n    }\n\n    /**\n     * UpdateInsert the data var and write to disk\n     * @param {object} obj - the object to be added\n     * @param {function(err:error,done:boolean)} callback - the status of the update done is true if update is sucessful\n     * @return {function} the callback function\n     */\n    upsert(obj,callback){\n        for(let key in obj){\n           this.data[key] = obj[key]; \n        }\n        this.save((err,done)=>{\n            return callback(err,done);\n        });\n    }\n\n    /**\n     * Delete from the data var and save to disk\n     * @param {array} keys - the keys to be deleted\n     * @param {function(err:error,done:boolean)} callback - the status if the delete was sucessful done is true if the delete was a success\n     * @return {function} the callback function\n     */\n    del(keys,callback){\n        keys.forEach((key)=>{\n            delete this.data[key];\n        });\n        this.save((err,done)=>{\n            return callback(err,done);\n        });\n    }\n\n    /**\n     * Get a key value from the data obj\n     * @param {string} key - the key of the value to get\n     * @return {object|array|string|number|date|null|undefined} the value of the key\n     */\n    get(key){\n        return this.data[key];\n    }\n\n    /**\n     * Convert the item to a json string\n     * @return {string} the json string of the data\n     */\n    toString(){\n        return JSON.stringify(this.data,null,2);\n    }\n\n\n\n}\n"
  },
  {
    "__docId__": 201,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "item",
    "memberof": "app/flat-lib/helpers/items/item.js",
    "longname": "app/flat-lib/helpers/items/item.js~item",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/items/item.js",
    "importStyle": "item",
    "description": "This class is to be used for users,sessions,pages,sections it provides a template for all to extend",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 202,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#constructor",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory of the item"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename of the item"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "the data of the item"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 203,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#filename",
    "access": null,
    "description": "The filename of the item",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#id",
    "access": null,
    "description": "The id of the item, the filename without .json",
    "lineNumber": 29,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#id",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#data",
    "access": null,
    "description": "The data of the item",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "fileManager",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#fileManager",
    "access": null,
    "description": "The filemanger for the object",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "idGen",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#idGen",
    "access": null,
    "description": "The id generator",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#create",
    "access": null,
    "description": "This method is diferent depening on the sub class",
    "lineNumber": 59,
    "params": [],
    "abstract": true,
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#save",
    "access": null,
    "description": "Save the object to disk",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "if the file was saved or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback if error or if the file saved"
    },
    "generator": false
  },
  {
    "__docId__": 211,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#load",
    "access": null,
    "description": "Load a file from disk",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "if the file was loaded or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callack if the file loaded or not"
    },
    "generator": false
  },
  {
    "__docId__": 212,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#data",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlink",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#unlink",
    "access": null,
    "description": "Remove a file from disk",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "if the file was deleted or error"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unlinkSync",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#unlinkSync",
    "access": null,
    "description": "Remove File from the disk syncronusly",
    "lineNumber": 103,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "genId",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#genId",
    "access": null,
    "description": "Generate an id and filename",
    "lineNumber": 111,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(err:error,done:boolean)"
      ],
      "spread": false,
      "description": "the callback if the id was generated or not"
    },
    "generator": false
  },
  {
    "__docId__": 216,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#id",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#filename",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "upsert",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#upsert",
    "access": null,
    "description": "UpdateInsert the data var and write to disk",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object to be added"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the status of the update done is true if update is sucessful"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "del",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#del",
    "access": null,
    "description": "Delete from the data var and save to disk",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": "the keys to be deleted"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the status if the delete was sucessful done is true if the delete was a success"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#get",
    "access": null,
    "description": "Get a key value from the data obj",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the value to get"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array",
        "string",
        "number",
        "date",
        "null",
        "undefined"
      ],
      "spread": false,
      "description": "the value of the key"
    },
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "app/flat-lib/helpers/items/item.js~item",
    "longname": "app/flat-lib/helpers/items/item.js~item#toString",
    "access": null,
    "description": "Convert the item to a json string",
    "lineNumber": 166,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the json string of the data"
    },
    "generator": false
  },
  {
    "__docId__": 222,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/items/manager.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/items/manager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\nimport item from './item.js';\n\n/**\n * This class is used to manage all of the items in an array\n */\nexport default class manager {\n\n    /**\n     * @constructor\n     * @param {string} dir - the directory of the items\n     */\n    constructor(dir){\n\n        /**\n         * The directory of the items\n         * @type {string}\n         */\n        this.dir = dir;\n\n        /**\n         * The array of items\n         * @type {array}\n         */\n        this.items = [];\n        \n        try {\n        //check that the dir exists if not create\n            let stat = fs.lstatSync(this.dir);\n        } catch(err){\n            fs.mkdirSync(this.dir);\n        }\n    }\n\n    /**\n     * Create a new item based on the current sub class\n     * @abstract\n     */\n    create(){\n\n    }\n\n    /**\n     * Load all of the items from file sync use as an init function\n     * @abstract\n     */\n    init(){\n        \n    }\n\n    /**\n     * sub int function to read all files and return data\n     * @return {array} the array of the file name and file data for each manager\n     */\n    subInt(){\n        var arr = [];\n        var files = fs.readdirSync(this.dir);\n        files.forEach((file)=>{\n            var data = fs.readFileSync(this.dir+file,'utf8');\n            try {\n                data = JSON.parse(data);\n                //var newItem = new item(this.dir,file,data);\n                //this.add(newItem);\n                var obj = {file,data}\n                arr.push(obj);\n            } catch(err){\n                console.log(err);\n            }\n        });\n        return arr;\n    }\n\n    /**\n     * Set the items array\n     * @param {array} newItems - the new items to set\n     */\n    setAll(newItems){\n        this.itmes = newItems;\n    }\n\n    /**\n     * Get all of the items in the array\n     * @return {array} the array of the items\n     */\n    all(){\n        return this.items;\n    }\n\n    /**\n     * Add an item to the items array\n     * @param {item} item - the item to be added\n     */\n    add(item){\n        this.items.push(item);\n    }\n\n    /**\n     * Find an item by id\n     * @param {string} id - the id to match\n     * @return {item} the matching item or null if not found\n     */\n    findById(id){\n        var item = null;\n        for(let i=0,length=this.items.length; i<length; i++){\n            if(this.items[i].id === id){\n                item = this.items[i];\n                break;\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Remove an item by id also delete from disk\n     * @param {string} id - the id to match\n     * @param {function(err:error,done:array)} callback - the callback function returns an array of the items removed\n     * @return {function} the callback function\n     */\n    removeById(id,callback){\n        for(var i=0,length=this.items.length; i<length; i++){\n            if(this.items[i].id === id){\n                break;\n            }\n        }\n        if(i === length){\n            return callback(new Error(\"Item Not Found\"),null);\n        }\n        this.items[i].unlink((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            var removed = this.items.splice(i,1);\n            return callback(null,removed);\n        });\n    }\n\n    /**\n     * Find an item by a param in the item.data only if its a non array,object\n     * @param {string} key - the key of the param\n     * @param {string|number|date|boolean} value - the value of the param\n     * @return {item} - the item or null if not found\n     */\n    findByParam(key,value){\n        var item = null;\n        for(let i=0,length=this.items.length; i<length; i++){\n            if(this.items[i].data[key] === value){\n                item = this.items[i];\n                break;\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Find many items by a param\n     * @param {string} key - the key of the param\n     * @param {string|number|date|boolean} value - the value of the param\n     * @return {arry} - the items or [] if not found\n     */\n    findManyByParam(key,value){\n        var item = [];\n        this.items.forEach((it)=>{\n            if(it.data[key] === value){\n                item.push(it);\n            }\n        });\n        return item;\n    }\n\n    /**\n     * Find a single item by many params\n     * @param {object} obj - the object to be used in the search\n     * @property {string} key - the key of the param to find\n     * @property {string|number|boolean|null} value - the value to match\n     * @return {item} item - the matched item or null if not found\n     */\n    findByManyParams(obj){\n        var item = null;\n        //obj keys\n        var keys = Object.keys(obj);\n        var keyLength = keys.length;\n        for(var i=0,l=this.items.length; i<l; i++){\n            for(var x=0; x<keyLength; x++){\n                if(this.items[i].data[keys[x]] !== obj[keys[x]]){\n                    break;\n                }\n            }\n            if(x === keyLength){\n                item = this.items[i];\n                break;\n            }\n        }\n        return item;\n    }\n\n\n    /**\n     * Delete an item by a param in the item.data only if non array,object\n     * @param {string} key - the key of the param\n     * @param {string|number|date|boolean} value - the value of the param\n     * @param {function(err:error,done:array)} callback - callback function returns array of removed items\n     * @return {function} the callback function\n     */\n    removeByParam(key,value,callback){\n        for(var i=0,length=this.items.length; i<length; i++){\n            if(this.items[i].data[key] === value){\n                break;\n            }\n        }\n        if(i === length){\n            return callback(new Error(\"Item Not Found\"),null);\n        }\n        this.items[i].unlink((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            var removed = this.items.splice(i,1);\n            return callback(null,removed);\n        });\n    }\n\n    /**\n     * Convert all of the items to a JSON sting\n     * @return {string} the string of the json array\n     */\n    toString(){\n        var str = '['\n        this.items.forEach((item)=>{\n            str += item.toString() + ',';\n        });\n        str += ']';\n        return str.replace(/,(?=[^,]*$)/, '');\n    }\n    \n}\n"
  },
  {
    "__docId__": 223,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "manager",
    "memberof": "app/flat-lib/helpers/items/manager.js",
    "longname": "app/flat-lib/helpers/items/manager.js~manager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/items/manager.js",
    "importStyle": "manager",
    "description": "This class is used to manage all of the items in an array",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the directory of the items"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 225,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dir",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#dir",
    "access": null,
    "description": "The directory of the items",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "items",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#items",
    "access": null,
    "description": "The array of items",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#create",
    "access": null,
    "description": "Create a new item based on the current sub class",
    "lineNumber": 42,
    "params": [],
    "abstract": true,
    "generator": false
  },
  {
    "__docId__": 228,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#init",
    "access": null,
    "description": "Load all of the items from file sync use as an init function",
    "lineNumber": 50,
    "params": [],
    "abstract": true,
    "generator": false
  },
  {
    "__docId__": 229,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "subInt",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#subInt",
    "access": null,
    "description": "sub int function to read all files and return data",
    "lineNumber": 58,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "the array of the file name and file data for each manager"
    },
    "generator": false
  },
  {
    "__docId__": 230,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAll",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#setAll",
    "access": null,
    "description": "Set the items array",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "newItems",
        "description": "the new items to set"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 231,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "itmes",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#itmes",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "all",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#all",
    "access": null,
    "description": "Get all of the items in the array",
    "lineNumber": 88,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "the array of the items"
    },
    "generator": false
  },
  {
    "__docId__": 233,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#add",
    "access": null,
    "description": "Add an item to the items array",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "item"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "the item to be added"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findById",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#findById",
    "access": null,
    "description": "Find an item by id",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the id to match"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "item"
      ],
      "spread": false,
      "description": "the matching item or null if not found"
    },
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeById",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#removeById",
    "access": null,
    "description": "Remove an item by id also delete from disk",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the id to match"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:array)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function returns an array of the items removed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 236,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findByParam",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#findByParam",
    "access": null,
    "description": "Find an item by a param in the item.data only if its a non array,object",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the param"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "date",
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the param"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "item"
      ],
      "spread": false,
      "description": "the item or null if not found"
    },
    "generator": false
  },
  {
    "__docId__": 237,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findManyByParam",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#findManyByParam",
    "access": null,
    "description": "Find many items by a param",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the param"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "date",
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the param"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "arry"
      ],
      "spread": false,
      "description": "the items or [] if not found"
    },
    "generator": false
  },
  {
    "__docId__": 238,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findByManyParams",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#findByManyParams",
    "access": null,
    "description": "Find a single item by many params",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object to be used in the search"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the param to find"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "boolean",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to match"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "item"
      ],
      "spread": false,
      "description": "item - the matched item or null if not found"
    },
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeByParam",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#removeByParam",
    "access": null,
    "description": "Delete an item by a param in the item.data only if non array,object",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key of the param"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "date",
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the param"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:array)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function returns array of removed items"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "app/flat-lib/helpers/items/manager.js~manager",
    "longname": "app/flat-lib/helpers/items/manager.js~manager#toString",
    "access": null,
    "description": "Convert all of the items to a JSON sting",
    "lineNumber": 229,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the string of the json array"
    },
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/pageRender.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/pageRender.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * Redner a cached page based on data and the template\n * @param {object} pageData - the page data object\n * @param {object} templateLayout - the json object layout of the template \n * @return {string} the created page string\n */\nexport default function pageRender(pageData,templateLayout){\n    return recursePage(pageData,JSON.parse(templateLayout));\n}\n\n/*\n * list of self closing tags\n * @type {array}\n */\nvar selfClose = ['br','hr','meta','link','input','img','!DOCTYPE html']; \n\n/**\n * Length of the self close, cache for loops\n * @type {number}\n */\nvar selfCloseLength = selfClose.length;\n\n/**\n * Replace the %%name!type:default%% with the page data\n * @param {object} pageData - the page data object\n * @property {string} name - the name of the data to replace\n * @property {string} type - the type of data text or html\n * @propery {string} html - the html to replace with\n * @property {string} text - the text to replace with\n * @param {string} toReplace - the item to replace\n * @return {string} the replaced string or inputed string\n */\nfunction dataReplace(pageData,toReplace){\n    if(toReplace.indexOf('%%') === -1){\n        return toReplace;\n    }\n    toReplace = toReplace.replace(/%%/g,'');\n    toReplace = toReplace.replace(/!/,'<>');\n    toReplace = toReplace.replace(/:/,'<>');\n    toReplace = toReplace.split('<>');\n    /**\n     * three parts\n     * 1 the name of the item to replace\n     * 2 the type of the item to replace\n     * 3 the html to replace with\n     */\n    for(let i=0,l=pageData.length; i<l; i++){\n        if(pageData[i].name === toReplace[0]){\n            var html = '';\n            if(pageData[i].type === 'text'){\n                html = pageData[i].text;\n            } else if(pageData[i].type === 'html'){\n                html = pageData[i].html;\n            }\n            return html;\n        }\n    }\n}\n\n/**\n * Sub recursive function\n * @param {object} pageDataParts - page data\n * @param {object} layout - template layout\n * @return {string} the html string\n */\nfunction recursePage(pageDataParts,layout){\n    var html = '';\n    if(Array.isArray(layout)){\n        layout.forEach((tmp)=>{\n            html += recursePage(pageDataParts,tmp);\n        });\n    } else {\n        //make the part string\n        var tag = layout.tag;\n        var subHtml = '<'+tag;\n        if(layout.atts){\n            //render the attibutes\n            for(let i=0,l=layout.atts.length; i<l; i++){\n                subHtml += ' ' + dataReplace(pageDataParts,layout.atts[i].key) + '=\"' + dataReplace(pageDataParts,layout.atts[i].value) + '\"';\n            }\n        }\n        subHtml += '>';\n        //render the html\n        if(layout.html){\n            subHtml += dataReplace(pageDataParts,layout.html);\n        }\n        //render the children\n        if(layout.children){\n            if(layout.children.length > 0){\n                subHtml += recursePage(pageDataParts,layout.children);\n            }\n        }\n        //determine if the tag self closes\n        for(var x=0; x<selfCloseLength; x++){\n            if(tag === selfClose[x]){\n                break;\n            }\n        }\n\n        if(x === selfCloseLength){\n            subHtml += '</' + tag + '>';\n        }\n        //add to html\n        html += subHtml;\n    }\n    return html;\n\n}\n"
  },
  {
    "__docId__": 242,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pageRender",
    "memberof": "app/flat-lib/helpers/pageRender.js",
    "longname": "app/flat-lib/helpers/pageRender.js~pageRender",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/pageRender.js",
    "importStyle": "pageRender",
    "description": "Redner a cached page based on data and the template",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pageData",
        "description": "the page data object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "templateLayout",
        "description": "the json object layout of the template"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the created page string"
    },
    "generator": false
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "selfClose",
    "memberof": "app/flat-lib/helpers/pageRender.js",
    "longname": "app/flat-lib/helpers/pageRender.js~selfClose",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/helpers/pageRender.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "selfCloseLength",
    "memberof": "app/flat-lib/helpers/pageRender.js",
    "longname": "app/flat-lib/helpers/pageRender.js~selfCloseLength",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/helpers/pageRender.js",
    "importStyle": null,
    "description": "Length of the self close, cache for loops",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dataReplace",
    "memberof": "app/flat-lib/helpers/pageRender.js",
    "longname": "app/flat-lib/helpers/pageRender.js~dataReplace",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/helpers/pageRender.js",
    "importStyle": null,
    "description": "Replace the %%name!type:default%% with the page data",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@propery",
        "tagValue": "{string} html - the html to replace with"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pageData",
        "description": "the page data object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toReplace",
        "description": "the item to replace"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the data to replace"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the type of data text or html"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "the text to replace with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the replaced string or inputed string"
    },
    "generator": false
  },
  {
    "__docId__": 246,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "recursePage",
    "memberof": "app/flat-lib/helpers/pageRender.js",
    "longname": "app/flat-lib/helpers/pageRender.js~recursePage",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/helpers/pageRender.js",
    "importStyle": null,
    "description": "Sub recursive function",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pageDataParts",
        "description": "page data"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "template layout"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the html string"
    },
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/helpers/uploadedFiles.js",
    "memberof": null,
    "longname": "app/flat-lib/helpers/uploadedFiles.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * Object list of the mime types\n * @type {array}\n * @property {string} ext - the file extension\n * @property {string} mime - the mime type\n */\nvar mimeTypes = fs.readFileSync('./flat-config/mime.json','utf8');\n\n/**\n * This class handels the uploaded/files io\n */\nexport default class uploadedFiles {\n\n    /**\n     * @constructor\n     * @param {string} publicDir - the public file dir\n     * @param {string} privateDir - the private dir\n     */\n    constructor(publicDir,privateDir){\n\n        /**\n         * The public uploaded file dir\n         * @type {string}\n         */\n        this._publicDir = publicDir;\n\n        try {\n        //check that the dir exists if not create\n            var stat = fs.statSync(this._publicDir);\n        } catch(err){\n\t\t\tif(err.code === 'ENOENT'){\n\t\t\t\tfs.mkdirSync(this._publicDir);\n\t\t\t} else {\n\t\t\t\tconsole.dir(err);\n\t\t\t}\n        }\n        /**\n         * The private uploaded file dir\n         * @type {string}\n         */\n        this._privateDir = privateDir;\n\n        try {\n        //check that the dir exists if not create\n            var stat = fs.statSync(this._privateDir);\n        } catch(err){\n\t\t\tif(err.code === 'ENOENT'){\n\t\t\t\tfs.mkdirSync(this._privateDir);\n\t\t\t} else {\n\t\t\t\tconsole.dir(err);\n\t\t\t}\n        }\n    }\n\n    /**\n     * Get the private dir\n     * @return {string} the private dir\n     */\n    get privateDir(){\n        return this._privateDir;\n    }\n\n    /**\n     * Set the private dir\n     * @param {string} dir - the new private dir\n     */\n    set privateDir(dir){\n        this._privateDir = dir;\n    }\n\n    /**\n     * Get the public dir\n     * @return {string} the public dir\n     */\n    get publicDir(){\n        return this._publicDir;\n    }\n\n    /**\n     * Set the public dir\n     * @param {string} dir - the new public dir\n     */\n    set publicDir(dir){\n        this._publicDir = dir;\n    }\n\n    /**\n     * Get the direcotry of the file\n     * @param {boolean} priv - is the file private\n     * @return {string} the directory\n     */\n    getDir(priv){\n        if(priv === true){\n            var dir = this._privateDir;\n        } else {\n            var dir = this._publicDir;\n        }\n        return dir;\n    }\n    \n    /**\n     * Write a file to disk\n     * @param {boolean} priv - if it is a public or private file\n     * @param {string} name - the file name\n     * @param {string} mime - the file encoding to use\n     * @param {string} fileData - the file data\n     * @param {function(err:err,done:boolean)} callback - done is true if the file was created\n     * @returns {function} the callback function\n     */\n    writeFile(priv,name,mime,fileData,callback){\n        var dir = this.getDir(priv);\n        var encoding = uploadedFiles.determineEncoding(mime);\n        fs.writeFile(dir+name,fileData,encoding,(err)=>{\n            if(err){\n                return callback(err,null);\n            }\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Read a file from disk\n     * @param {string} file - the file to be loaded\n     * @param {function(err:error,mime:string,fileStr:string)} callback - the callback function returns error or the file string\n     * @return {function} the callback function\n     */\n    readFile(file,callback){\n        var mime = uploadedFiles.mimeType(file);\n        var encoding = uploadedFiles.determineEncoding(mime);\n        fs.readFile(file,encoding,(err,fileStr)=>{\n            if(err){\n                return callback(err,null,null);\n            }\n            return callback(err,mime,fileStr);\n        });\n    }\n\n    /**\n     * Remove a file from disk\n     * @param {boolean} priv - is the file private or not\n     * @param {string} name - the name of the file\n     * @param {function(err:error,done:boolean)} callback - done is true if the file was deleted\n     * @return {function} the callback\n     */\n    removeFile(priv,name,callback){\n        var dir = this.getDir(priv);\n        fs.unlink(dir+name,(err)=>{\n            if(err){\n                return callback(err,null);\n            }\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Look up a mime type\n     * @param {string} filename - the file name\n     * @return {string} the mime type\n     */\n    static mimeType(filename){\n        var default_mime = 'application/octet-stream';\n        var ext = filename.split('.').pop();\n        for(var key in mimeTypes){\n            if(ext === key){\n                default_mime = mimeTypes[key];\n                break;\n            }\n        }\n        return default_mime;\n    }\n\n    /**\n     * This function detrimes the file encoding to use when reading/writing files uploaded\n     * @param {string} mime - the mime type\n     * @return {string} the encoding to use\n     */\n    static determineEncoding(mime){\n        var encoding = 'binary';\n        var textTypes = ['text','json','javascript'];\n        for(let i=0,l=textTypes.length; i<l; i++){\n            if(mime.indexOf(textTypes[i]) > -1){\n                encoding = 'utf-8';\n                break;\n            }\n        }\n        return encoding;\n    }\n\n}\n"
  },
  {
    "__docId__": 248,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "mimeTypes",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~mimeTypes",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/helpers/uploadedFiles.js",
    "importStyle": null,
    "description": "Object list of the mime types",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": "the file extension"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mime",
        "description": "the mime type"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 249,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "uploadedFiles",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/helpers/uploadedFiles.js",
    "importStyle": "uploadedFiles",
    "description": "This class handels the uploaded/files io",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 250,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#constructor",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "publicDir",
        "description": "the public file dir"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "privateDir",
        "description": "the private dir"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 251,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_publicDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#_publicDir",
    "access": null,
    "description": "The public uploaded file dir",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_privateDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#_privateDir",
    "access": null,
    "description": "The private uploaded file dir",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 253,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "privateDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#privateDir",
    "access": null,
    "description": "Get the private dir",
    "lineNumber": 64,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the private dir"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 254,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "privateDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#privateDir",
    "access": null,
    "description": "Set the private dir",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the new private dir"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 255,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_privateDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#_privateDir",
    "access": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "publicDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#publicDir",
    "access": null,
    "description": "Get the public dir",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the public dir"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 257,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "publicDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#publicDir",
    "access": null,
    "description": "Set the public dir",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the new public dir"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 258,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_publicDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#_publicDir",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDir",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#getDir",
    "access": null,
    "description": "Get the direcotry of the file",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "priv",
        "description": "is the file private"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the directory"
    },
    "generator": false
  },
  {
    "__docId__": 260,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "writeFile",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#writeFile",
    "access": null,
    "description": "Write a file to disk",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} the callback function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "priv",
        "description": "if it is a public or private file"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the file name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mime",
        "description": "the file encoding to use"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileData",
        "description": "the file data"
      },
      {
        "nullable": null,
        "types": [
          "function(err:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the file was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "readFile",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#readFile",
    "access": null,
    "description": "Read a file from disk",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "the file to be loaded"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,mime:string,fileStr:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function returns error or the file string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 262,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeFile",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles#removeFile",
    "access": null,
    "description": "Remove a file from disk",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "priv",
        "description": "is the file private or not"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the file"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the file was deleted"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback"
    },
    "generator": false
  },
  {
    "__docId__": 263,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "mimeType",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles.mimeType",
    "access": null,
    "description": "Look up a mime type",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the file name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the mime type"
    },
    "generator": false
  },
  {
    "__docId__": 264,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "determineEncoding",
    "memberof": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles",
    "longname": "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles.determineEncoding",
    "access": null,
    "description": "This function detrimes the file encoding to use when reading/writing files uploaded",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mime",
        "description": "the mime type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the encoding to use"
    },
    "generator": false
  },
  {
    "__docId__": 265,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/info/info.js",
    "memberof": null,
    "longname": "app/flat-lib/info/info.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n\n/**\n * This class collects information from various parts of the server\n */\nexport default class info {\n\n    /**\n     * Set the dir and file for storing the data on disk\n     * @constructor\n     * @param {string} dir - the dir to store the file\n     * @param {string} filename - the json filename on disk\n     * @param {number} writeInfoToDiskAfter - the number of updates to the data object before we write to disk\n     */\n    constructor(dir,filename,writeInfoToDiskAfter){\n\n        /**\n         * The info storage dir\n         * @type {string}\n         */\n        this.dir = dir;\n\n        //check that the dir exists if not create\n        try {\n            var stat = fs.statSync(this.dir);\n        } catch(err){\n\t\t\tif(err.code === 'ENOENT'){\n\t\t\t\tfs.mkdirSync(this.dir);\n\t\t\t} else {\n\t\t\t\tconsole.dir(err);\n\t\t\t}\n        }\n\n        /**\n         * The info storage file\n         * @type {string}\n         */\n        this.filename = filename;\n\n        /**\n         * The data collected\n         * @type {object}\n         */\n        this._data = {};\n\n        /**\n         * The current page views key is the perm link\n         * @type {object}\n         */\n        this._data.pageViews = {};\n\n        /**\n         * The last user who logged in name and date\n         * @type {object}\n         */\n        this._data.lastLogin = {};\n\n        //try to load the info file\n        try {\n            this._data = JSON.parse(fs.readFileSync(this.dir+this.filename,'utf8'));\n        } catch(err){\n\n        }\n\n        /**\n         * The last boot time\n         * @type {date}\n         */\n        this._data.boot = new Date();\n\n        /**\n         * The number of updates before we write to disk\n         * @type {number}\n         */\n        this.writeInfoToDiskAfter = writeInfoToDiskAfter;\n\n        /**\n         * The current number of updates to the data object\n         * @type {number}\n         */\n        this.currentUpdates = 0;\n\n    }\n\n    /**\n     * Get the current data object as a string\n     * @return {string} the data object as a json string\n     */\n    toString() {\n        return JSON.stringify(this._data,null,2);\n    }\n\n    /**\n     * Write the data object to disk asyncronously\n     * @param {function(err:error,done:boolean)} callback - done is true if the file was writen to disk\n     * @return {function} the callback function\n     */\n    write(callback){\n        this.currentUpdates = 0;\n        fs.writeFile(this.dir+this.filename,this.toString(),'utf8',(err)=>{\n            if(err){\n                return callback(err,null);\n            }\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Check if we need to write to disk\n     */\n    checkWrite(){\n        this.currentUpdates++;\n        if(this.currentUpdates >= this.writeInfoToDiskAfter){\n            //this is async but we are not looking if success or not\n            this.write();\n        }\n    }\n\n    /**\n     * Get the data object\n     * @return {object} the data object\n     */\n    get data() {\n        this.checkWrite();\n        return this._data;\n    }\n\n    /**\n     * Set the data object\n     * @param {object} obj - the new data object\n     */\n    set data(obj){\n        this._data = obj;\n    }\n\n}\n"
  },
  {
    "__docId__": 266,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "info",
    "memberof": "app/flat-lib/info/info.js",
    "longname": "app/flat-lib/info/info.js~info",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/info/info.js",
    "importStyle": "info",
    "description": "This class collects information from various parts of the server",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 267,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#constructor",
    "access": null,
    "description": "Set the dir and file for storing the data on disk",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dir",
        "description": "the dir to store the file"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the json filename on disk"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "writeInfoToDiskAfter",
        "description": "the number of updates to the data object before we write to disk"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 268,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dir",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#dir",
    "access": null,
    "description": "The info storage dir",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#filename",
    "access": null,
    "description": "The info storage file",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#_data",
    "access": null,
    "description": "The data collected",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#_data",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "writeInfoToDiskAfter",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#writeInfoToDiskAfter",
    "access": null,
    "description": "The number of updates before we write to disk",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentUpdates",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#currentUpdates",
    "access": null,
    "description": "The current number of updates to the data object",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#toString",
    "access": null,
    "description": "Get the current data object as a string",
    "lineNumber": 93,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the data object as a json string"
    },
    "generator": false
  },
  {
    "__docId__": 275,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "write",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#write",
    "access": null,
    "description": "Write the data object to disk asyncronously",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the file was writen to disk"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentUpdates",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#currentUpdates",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "checkWrite",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#checkWrite",
    "access": null,
    "description": "Check if we need to write to disk",
    "lineNumber": 115,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#data",
    "access": null,
    "description": "Get the data object",
    "lineNumber": 127,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the data object"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 279,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#data",
    "access": null,
    "description": "Set the data object",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the new data object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 280,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "app/flat-lib/info/info.js~info",
    "longname": "app/flat-lib/info/info.js~info#_data",
    "access": null,
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/page/page.js",
    "memberof": null,
    "longname": "app/flat-lib/page/page.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * This class manages the saving,loading from file and rendering from memory\n * @extend {item}\n */\nexport default class page extends item {\n\n    /**\n     * Create a new page\n     * @overide\n     * @param {string} permalink - the link of the page\n     * @param {object} def - the default data to be passed into the page object as key:value\n     * @property {string} name - the name of the string to replace\n     * @property {string} type - the type of the string to replace text or html\n     * @property {string} html - the html string\n     * @param {string} template - the default template name\n     * @param {function(err:err,done:boolean)} callback - returns done true if created\n     * @return {function} the callback function\n     */\n    create(permalink,def,template,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.permalink = permalink;\n            this.data.def = def;\n            this.data.dateCreated = new Date();\n            this.data.template = template;\n            this.save(function(err,done){\n                return callback(err,done);\n            });\n        });\n    }\n\n    \n\n}\n"
  },
  {
    "__docId__": 282,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "page",
    "memberof": "app/flat-lib/page/page.js",
    "longname": "app/flat-lib/page/page.js~page",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/page/page.js",
    "importStyle": "page",
    "description": "This class manages the saving,loading from file and rendering from memory",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@extend",
        "tagValue": "{item}"
      }
    ],
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 283,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/page/page.js~page",
    "longname": "app/flat-lib/page/page.js~page#create",
    "access": null,
    "description": "Create a new page",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@overide",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the link of the page"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "def",
        "description": "the default data to be passed into the page object as key:value"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "the default template name"
      },
      {
        "nullable": null,
        "types": [
          "function(err:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns done true if created"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the string to replace"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the type of the string to replace text or html"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "html",
        "description": "the html string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 284,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/page/pageManager.js",
    "memberof": null,
    "longname": "app/flat-lib/page/pageManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport page from './page.js';\n\n/**\n * Manage the pages \n * @extends {manager}\n */\nexport default class pageManager extends manager {\n\n     /**\n     * Create a new page\n     * @overide\n     * @param {string} permalink - the link of the page\n     * @param {object} def - the default data to be passed into the page object as key:value\n     * @param {string} template - the name of the template file\n     * @param {function(err:err,done:boolean)} callback - returns done true if created\n     * @return {function} the callback function\n     */\n    create(permalink,def,template,callback){\n        var newPage = new page(this.dir);\n        newPage.create(permalink,def,template,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(newPage);\n            return callback(null,true);\n        });\n\n    }    \n\n    /**\n     * Int all of the pages\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new page(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 285,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "pageManager",
    "memberof": "app/flat-lib/page/pageManager.js",
    "longname": "app/flat-lib/page/pageManager.js~pageManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/page/pageManager.js",
    "importStyle": "pageManager",
    "description": "Manage the pages ",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 286,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/page/pageManager.js~pageManager",
    "longname": "app/flat-lib/page/pageManager.js~pageManager#create",
    "access": null,
    "description": "Create a new page",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@overide",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "permalink",
        "description": "the link of the page"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "def",
        "description": "the default data to be passed into the page object as key:value"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "the name of the template file"
      },
      {
        "nullable": null,
        "types": [
          "function(err:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns done true if created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 287,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/page/pageManager.js~pageManager",
    "longname": "app/flat-lib/page/pageManager.js~pageManager#init",
    "access": null,
    "description": "Int all of the pages",
    "lineNumber": 38,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 288,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/section/section.js",
    "memberof": null,
    "longname": "app/flat-lib/section/section.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * The section class for sections in pages(like widgets)\n * @extends {item}\n */\nexport default class section extends item {\n\n    /**\n     * Create a section\n     * @override\n     * @param {string} name - the name of the section\n     * @param {string} layout - the json layout of the section\n     * @param {function(err:error,done:boolean)} callback - the callback function done is true if the section is created\n     * @return {function} the callback function\n     */\n    create(name,layout,callback){\n        //generate id\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,done);\n            }\n            this.data.name = name;\n            this.data.layout = layout;\n            this.dateCreated = new Date();\n            this.save(function(err,done){\n                return callback(err,done);\n            });\n        });\n    }\n\n\n}\n"
  },
  {
    "__docId__": 289,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "section",
    "memberof": "app/flat-lib/section/section.js",
    "longname": "app/flat-lib/section/section.js~section",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/section/section.js",
    "importStyle": "section",
    "description": "The section class for sections in pages(like widgets)",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 290,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/section/section.js~section",
    "longname": "app/flat-lib/section/section.js~section#create",
    "access": null,
    "description": "Create a section",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the section"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the json layout of the section"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function done is true if the section is created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 291,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dateCreated",
    "memberof": "app/flat-lib/section/section.js~section",
    "longname": "app/flat-lib/section/section.js~section#dateCreated",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/section/sectionManager.js",
    "memberof": null,
    "longname": "app/flat-lib/section/sectionManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport section from './section.js';\n\n/**\n * This class manages all of the sections of the site\n * @extends {manager}\n */\nexport default class sectionManager extends manager {\n\n    /**\n     * Add a section to the manager\n     * @override\n     * @param {string} name - the name of the section\n     * @param {string} layout - the layout of the section\n     * @param {function(err:error,done:boolean)} callback - returns done true if the section was sucessfully created\n     * @return {function} the callback function\n     */\n    create(name,layout,callback){\n        var sect = new section(this.dir);\n        sect.create(name,layout,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(sect);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Int all of the sections\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new section(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 293,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "sectionManager",
    "memberof": "app/flat-lib/section/sectionManager.js",
    "longname": "app/flat-lib/section/sectionManager.js~sectionManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/section/sectionManager.js",
    "importStyle": "sectionManager",
    "description": "This class manages all of the sections of the site",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 294,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/section/sectionManager.js~sectionManager",
    "longname": "app/flat-lib/section/sectionManager.js~sectionManager#create",
    "access": null,
    "description": "Add a section to the manager",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the section"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the layout of the section"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns done true if the section was sucessfully created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 295,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/section/sectionManager.js~sectionManager",
    "longname": "app/flat-lib/section/sectionManager.js~sectionManager#init",
    "access": null,
    "description": "Int all of the sections",
    "lineNumber": 36,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 296,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/cookies.js",
    "memberof": null,
    "longname": "app/flat-lib/server/cookies.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\"\n\nimport qs from 'querystring';\n\n/**\n * This gives cookie functions to the req and res objects\n * @param {object} req - the request object\n * @param {object} res - the response object\n * @return {object} req/res the request response\n * @property {array} req.cookies the cookies from the request\n * @property {array} res.cookies the cookies to be sent\n * @property {function} res.setCookie sets a cookie\n * @property {function} res.removeCookie removes a cookie\n */\nexport default function cookies(req,res){\n\n    /**\n     * Load the cookies\n     * @type {object}\n     */\n    req.cookies = qs.parse(req.headers.cookie,';','=');\n    \n    /*\n     *  Set up for cookie sending\n     *  @type {object}\n     */\n    res.cookies = [];\n\n    /*\n     * Set a cookie for sending\n     * @param {string} name - the name of the cookie\n     * @param {string} value - the value of the cookie\n     * @param {number} expires - the timespan of the cookie\n     * @param {string} domain - the domain of the cookie\n     * @param {string} path - the path of the cookie\n     * @return {object} the cookie that was added\n     * @property {string} name the cookie name\n     * @property {string} value the cookie value\n     * @poperty {number} the timespan of the cookie\n     * @property {string} domain the domain of the cookie\n     * @property {sting} path the path of the cookie\n     */\n    res.setCookie = function(name,value,expires,path,domain){\n        var cookie = {};\n        cookie[name] = value;\n        cookie.expires = (new Date(Date.now() + expires)).toUTCString();\n        if(domain){\n            cookie.domain = domain;\n        }\n        if(path){\n            cookie.path = path;\n        }\n        var cookieStr = qs.stringify(cookie,';','=');\n        res.cookies.push(qs.unescape(cookieStr));\n        res.setHeader('Set-Cookie',res.cookies);\n        return cookie;\n    }\n\n    /*\n     * Remove an existing cookie\n     * @param {string} name - the name of the cookie\n     */\n    res.removeCookie = function(name,path){\n        res.setCookie(name,'',0,path);\n    }\n\n\n}\n"
  },
  {
    "__docId__": 297,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "cookies",
    "memberof": "app/flat-lib/server/cookies.js",
    "longname": "app/flat-lib/server/cookies.js~cookies",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/cookies.js",
    "importStyle": "cookies",
    "description": "This gives cookie functions to the req and res objects",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "req.cookies",
        "description": "the cookies from the request"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "res.cookies",
        "description": "the cookies to be sent"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "res.setCookie",
        "description": "sets a cookie"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "res.removeCookie",
        "description": "removes a cookie"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "req/res the request response"
    },
    "generator": false
  },
  {
    "__docId__": 298,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/loadBody.js",
    "memberof": null,
    "longname": "app/flat-lib/server/loadBody.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport qs from 'querystring';\n\n/**\n * Load a file upload or other multipart data\n * @param {object} req - the request data\n * @param {number} maxPostSize - the maximum upload size\n * @param {function(req:object)} callback - returns the request obejct in a callback\n * @return {function} the callback function\n */\nfunction loadFile(req,maxPostSize,callback){\n    var body = new Buffer('');\n    req.on('data',(data)=>{\n        body = Buffer.concat([body,data]);\n        if(body.length > maxPostSize){\n            //destory the connection\n            req.connection.destroy();\n        }\n    });\n\n    req.on('error',()=>{\n        return callback(req);\n    });\n    \n    req.on('end',()=>{\n        body = body.toString('binary');\n        req.body = {};\n        req.body.files = {};\n        var string = body.split('Content-Disposition:');\n\n\t\tstring.shift();\n\n\n\t\t//var reg = new RegExp('(\\r\\n|\\r|\\n)', 'g');\n\n\t\tstring.forEach((str)=>{\n\t\t\tstr = str.replace('form-data;', '')\n\t\t    str = str.substring(0, str.indexOf('\\r\\n--'));\n\t\t    str = str.split('\\r\\n\\r\\n');\n\t\t    var obj = {};\n\t\t    if (str[0].indexOf('\"; filename=\"') > -1) {\n\t\t        obj.type = 'file';\n\t\t        var sub = str[0].split('\"; filename=\"');\n                var type = sub[1].split('\"');\n\t\t        var name = sub[0].split('=\"')[1];\n\t\t        req.body.files[name] = {}; //name\n\t\t        req.body.files[name].filename = type[0];\n\t\t        req.body.files[name].data = str[1];\n\t\t    } else {\n\t\t        var sub = str[0].split('=');\n\t\t        sub = sub[1].replace(/\"/g, '');\n\t\t        req.body[sub] = str[1];\n\t\t\t}\n\t    });\n\t    return callback(req);\n    });\n}\n\n/**\n * Load a post string\n * @param {object} req - the request object\n * @param {number} maxPostSize - the maximum upload size\n * @param {function(req:object)} callback - returns the request obejct in a callback\n * @return {function} the callback function\n */\nfunction loadString(req,maxPostSize,callback){\n    var body = '';\n\n    req.on('data',(data)=>{\n        body += data;\n        if(body.length > maxPostSize){\n            //destory the connection\n            req.connection.destroy();\n        }\n    });\n\n    req.on('error',()=>{\n        return callback(req);\n    });\n    \n    req.on('end',()=>{\n        try {\n            body = JSON.parse(body);\n        } catch(err){\n            body = qs.parse(body);\n        }\n        req.body = body;\n        return callback(req);\n    });\n}\n\n/**\n * This function loads the post body data if the method is post\n * @param {object} req - the request object\n * @param {object} res - the response object\n * @param {number} maxPostSize - the maximum size of a post request\n * @param {function} callback - the callback function beacuse loading is async\n * @return {object} the request\n * @property {object} req.body the request body\n */\nexport default function loadBody(req,res,maxPostSize,callback){\n    req.body = {};\n    if(req.method !== 'POST'){\n        return callback();\n    }\n    if(req.headers['content-type']){\n        if(req.headers['content-type'].indexOf('multipart/form-data')  > -1){\n            //load form\n            loadFile(req,maxPostSize,(req)=>{\n                return callback();\n            }); \n        } else {\n            //load string\n            loadString(req,maxPostSize,(req)=>{\n                return callback();\n            });\n        }   \n    } else {\n        //don't load\n\t\treturn callback();\n\t}\n\n}\n"
  },
  {
    "__docId__": 299,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "loadFile",
    "memberof": "app/flat-lib/server/loadBody.js",
    "longname": "app/flat-lib/server/loadBody.js~loadFile",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/server/loadBody.js",
    "importStyle": null,
    "description": "Load a file upload or other multipart data",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request data"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPostSize",
        "description": "the maximum upload size"
      },
      {
        "nullable": null,
        "types": [
          "function(req:object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns the request obejct in a callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "loadString",
    "memberof": "app/flat-lib/server/loadBody.js",
    "longname": "app/flat-lib/server/loadBody.js~loadString",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-lib/server/loadBody.js",
    "importStyle": null,
    "description": "Load a post string",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPostSize",
        "description": "the maximum upload size"
      },
      {
        "nullable": null,
        "types": [
          "function(req:object)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns the request obejct in a callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "loadBody",
    "memberof": "app/flat-lib/server/loadBody.js",
    "longname": "app/flat-lib/server/loadBody.js~loadBody",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/loadBody.js",
    "importStyle": "loadBody",
    "description": "This function loads the post body data if the method is post",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPostSize",
        "description": "the maximum size of a post request"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function beacuse loading is async"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.body",
        "description": "the request body"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the request"
    },
    "generator": false
  },
  {
    "__docId__": 302,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/responseMods.js",
    "memberof": null,
    "longname": "app/flat-lib/server/responseMods.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\n\n/**\n * This function adds new methods to the response object\n * @param {object} req - the request object\n * @param {object} res - the response object\n * @param {number} port - the server port number\n */\nexport default function responseMods(req,res,port){\n        //redirect to a url on the site\n        res.redirect = function(path){\n            res.writeHead(302,{'Location':path});\n            res.end();\n        };\n\n        //send a static file without modifications\n        res.sendStatic = function(file){\n            fs.readFile(file,'utf8',(err,fileStr)=>{\n                res.setHeader('content-type','text/html; charset=utf-8');\n                if(err){\n                    console.dir(err);\n                    res.statusCode = 500;\n                    res.end('Failed To Load Static File');\n                } else {\n                    res.statusCode = 200;\n                    res.end(fileStr);\n                }\n            });\n        };\n}\n"
  },
  {
    "__docId__": 303,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "responseMods",
    "memberof": "app/flat-lib/server/responseMods.js",
    "longname": "app/flat-lib/server/responseMods.js~responseMods",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/responseMods.js",
    "importStyle": "responseMods",
    "description": "This function adds new methods to the response object",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "port",
        "description": "the server port number"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/router.js",
    "memberof": null,
    "longname": "app/flat-lib/server/router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\"\n\nimport fs from 'fs';\nimport routerLoop from './routerLoop.js'\n\n/**\n * The core of the server handels the use and get and post routes  \n */\nexport default class router {\n    /** \n     * @constructor create the values for the router \n     */\n    constructor(){\n        /**\n         * the config object for the router stores key/vars\n         */\n        this.config = {};\n        \n        /**\n         * this the the array of functions to run before the stack the function is fn(req,res,next)\n         */\n        this.uses = [];\n\n        /**\n         * this is the array of the gets as objects {path,fn(req,res)}\n         */\n        this.gets = [];\n\n        /**\n         * this is the array of the posts as objects{path,fn(req,res)}\n         */\n        this.posts = [];\n\n        /**\n         * The function to be run if no route is matched\n         */\n        this.doneFn = function(){};\n\n        /**\n         * The manager controller\n         * @type {controller}\n         */\n        this._controller = {};\n\n    }\n\n    /**\n     * set the controller\n     * @param {controller} controller - the manager controller\n     */\n    set controller(controller){\n       this._controller = controller;\n    }\n\n    /**\n     * Get the manager controller\n     * @return {controller} the manager controller\n     */\n    get controller(){\n       return this._controller;\n    }\n\n    /**\n     * Loads a config file and stores it overwrites whats in the current config var\n     * Loads syncronuously\n     * @param {string} filename - the file name\n     */\n    loadConfig(filename){\n        try {\n            var file = fs.readFileSync(filename,'utf8');\n            this.config = JSON.parse(file);\n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    /**\n     * Writes the configuration to a file\n     * @param {string} filename - the filename to write to\n     */\n    writeConfig(filename){\n        try {\n            fs.writeFileSync(filename,JSON.stringify(this.config),'utf8');\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n    /**\n     * Gets a value form the config var\n     * @param {string} name - the name of the config value we want to get\n     * @return {*} retuns the value of the config\n     */\n    getValue(name){\n        return this.config[name];\n    }\n\n    /**\n     * Sets a value in the config var\n     * @param {string} name - the name of the value we want to set\n     * @param {*} value - the value we want to set\n     */\n    setValue(name,value){\n        this.config[name] = value;\n    }\n\n    /**\n     * This adds a function to the use array\n     * @param {function} fn - the function to be added\n     */\n    use(fn){\n        this.uses.push(fn);\n    }\n\n    /**\n     * Adds a function to the get array\n     * @param {string} path - the path of the get\n     * @param {function} fn - the function to add\n     */\n    get(path,fn){\n        this.gets.push({path:path,fn:fn});\n    }\n\n    /**\n     * Adds a function to the post array\n     * @param {string} path - the path of the post array\n     * @param {function} fn - the function to add\n     */\n    post(path,fn){\n        this.posts.push({path:path,fn:fn});\n    }\n\n    /**\n     * The function to be called if nothing is matched and the loop is not stoped\n     * @param {function} fn - the final function\n     */\n    always(fn){\n        this.doneFn = fn;\n    }\n\n    /**\n     * The function to loop through the routes, should export the class with this method\n     * @return {function} returns a function to the server it was added to\n     */\n    run(control){\n        this._controller = control;\n        return (req,res)=>{\n            var loop = new routerLoop(req,res,this.uses,this.gets,this.posts,this.doneFn);\n            loop.loop();\n        }\n    }\n}\n\n"
  },
  {
    "__docId__": 305,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "router",
    "memberof": "app/flat-lib/server/router.js",
    "longname": "app/flat-lib/server/router.js~router",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/router.js",
    "importStyle": "router",
    "description": "The core of the server handels the use and get and post routes",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 306,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#constructor",
    "access": null,
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": "create the values for the router"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 307,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#config",
    "access": null,
    "description": "the config object for the router stores key/vars",
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uses",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#uses",
    "access": null,
    "description": "this the the array of functions to run before the stack the function is fn(req,res,next)",
    "lineNumber": 22,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "gets",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#gets",
    "access": null,
    "description": "this is the array of the gets as objects {path,fn(req,res)}",
    "lineNumber": 27,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "posts",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#posts",
    "access": null,
    "description": "this is the array of the posts as objects{path,fn(req,res)}",
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_controller",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#_controller",
    "access": null,
    "description": "The manager controller",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "controller"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 312,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#controller",
    "access": null,
    "description": "set the controller",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "controller"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "the manager controller"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_controller",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#_controller",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#controller",
    "access": null,
    "description": "Get the manager controller",
    "lineNumber": 59,
    "return": {
      "nullable": null,
      "types": [
        "controller"
      ],
      "spread": false,
      "description": "the manager controller"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 315,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadConfig",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#loadConfig",
    "access": null,
    "description": "Loads a config file and stores it overwrites whats in the current config var\nLoads syncronuously",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the file name"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 316,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#config",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "writeConfig",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#writeConfig",
    "access": null,
    "description": "Writes the configuration to a file",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename to write to"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 318,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getValue",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#getValue",
    "access": null,
    "description": "Gets a value form the config var",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the config value we want to get"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "retuns the value of the config"
    },
    "generator": false
  },
  {
    "__docId__": 319,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValue",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#setValue",
    "access": null,
    "description": "Sets a value in the config var",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the value we want to set"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value we want to set"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 320,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "use",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#use",
    "access": null,
    "description": "This adds a function to the use array",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function to be added"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 321,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#get",
    "access": null,
    "description": "Adds a function to the get array",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "the path of the get"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function to add"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 322,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "post",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#post",
    "access": null,
    "description": "Adds a function to the post array",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "the path of the post array"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function to add"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 323,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "always",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#always",
    "access": null,
    "description": "The function to be called if nothing is matched and the loop is not stoped",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the final function"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 324,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "doneFn",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#doneFn",
    "access": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#run",
    "access": null,
    "description": "The function to loop through the routes, should export the class with this method",
    "lineNumber": 145,
    "params": [
      {
        "name": "control",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "returns a function to the server it was added to"
    },
    "generator": false
  },
  {
    "__docId__": 326,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_controller",
    "memberof": "app/flat-lib/server/router.js~router",
    "longname": "app/flat-lib/server/router.js~router#_controller",
    "access": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/routerLoop.js",
    "memberof": null,
    "longname": "app/flat-lib/server/routerLoop.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n/**\n * The class that loops through the uses,gets,posts and calls the end function if need be\n */\nexport default class routerLoop {\n    /**\n     * @constructor\n     * @param {object} req - the request object\n     * @param {object} res - the response object\n     * @param {array} uses - the function to be called in order\n     * @param {array} gets - the array of get functions\n     * @param {array} posts - the array of post functions\n     * @param {funtion} end - the final function of the route\n     */\n    constructor(req,res,uses,gets,posts,end){\n        /**\n         * The position of the uses array\n         */\n        this.usesPosition = 0;\n        \n        /**\n         * The position of the gets array\n         */\n        this.getsPosition = 0;\n\n        /**\n         * The position of the posts arra\n         */\n        this.postsPosition = 0;\n\n        this.req = req;\n        this.res = res;\n        this.uses = uses;\n        this.gets = gets;\n        this.posts = posts;\n        this.end = end;\n\n    }\n\n    /**\n     * Run though all of the uses/gets/posts and call end if nessacary\n     */\n    loop(){\n        if(this.usesPosition < this.uses.length){\n            this.uses[this.usesPosition](this.req,this.res,()=>{\n                this.usesPosition++;\n                this.loop();\n            });\n        } else {\n            if(this.req.method === 'GET'){\n                if(this.getsPosition < this.gets.length){\n                   if(this.gets[this.getsPosition].path === this.req.url){\n                        //run the get\n                        this.gets[this.getsPosition].fn(this.req,this.res);\n                   } else {\n                        this.getsPosition++;\n                        this.loop();\n                   }\n                } else {\n                    //end function\n                    this.end(this.req,this.res);\n                }\n            } else if(this.req.method === 'POST'){\n                if(this.postsPosition < this.posts.length){\n                    if(this.posts[this.postsPosition].path === this.req.url){\n                        this.posts[this.postsPosition].fn(this.req,this.res);\n                    } else {\n                        this.postsPosition++;\n                        this.loop();\n                    }\n                } else {\n                    //end function\n                    this.end(this.req,this.res);\n                }\n            } else {\n                //stop the request we do not handel other then get/post\n                this.req.connection.destroy();\n            }\n        }\n    }\n}\n\n"
  },
  {
    "__docId__": 328,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "routerLoop",
    "memberof": "app/flat-lib/server/routerLoop.js",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/routerLoop.js",
    "importStyle": "routerLoop",
    "description": "The class that loops through the uses,gets,posts and calls the end function if need be",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 329,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "uses",
        "description": "the function to be called in order"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "gets",
        "description": "the array of get functions"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "posts",
        "description": "the array of post functions"
      },
      {
        "nullable": null,
        "types": [
          "funtion"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "the final function of the route"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 330,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "usesPosition",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#usesPosition",
    "access": null,
    "description": "The position of the uses array",
    "lineNumber": 21,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "getsPosition",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#getsPosition",
    "access": null,
    "description": "The position of the gets array",
    "lineNumber": 26,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "postsPosition",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#postsPosition",
    "access": null,
    "description": "The position of the posts arra",
    "lineNumber": 31,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "req",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#req",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "res",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#res",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uses",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#uses",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "gets",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#gets",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "posts",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#posts",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "end",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#end",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loop",
    "memberof": "app/flat-lib/server/routerLoop.js~routerLoop",
    "longname": "app/flat-lib/server/routerLoop.js~routerLoop#loop",
    "access": null,
    "description": "Run though all of the uses/gets/posts and call end if nessacary",
    "lineNumber": 45,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 340,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/server.js",
    "memberof": null,
    "longname": "app/flat-lib/server/server.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport fs from 'fs';\nimport serverLoop from './serverLoop.js';\nimport loadBody from './loadBody';\nimport urlMods from './urlMods.js';\nimport cookies from './cookies.js';\nimport responseMods from './responseMods.js';\n\n/**\n * The main server that accepts uses and routers\n */\nexport default class server {\n\n /**\n  * @construnctor\n  */\n    constructor() {\n        /**\n         * The config varable\n         * @type {object}\n         */\n        this.config = {};\n\n        /**\n         * The max post data size\n         * @type {number}\n         */\n        this.config.maxPostSize = 1e6;\n\n        /**\n         * The array of the routers\n         * @type {array}\n         */\n        this.routers = [];\n\n        /**\n         * The array of use functions format fn(req,res,next)\n         * @type {array}\n         */\n        this.uses = [];\n\n        /**\n         * The end function if nothing is found\n         * @type {function}\n         */\n        this.done = function(){};\n\n        /**\n         * The controller where all the managers are stored\n         * @type {controller}\n         */\n        this._controller = {};\n\n\n    }\n\n    /**\n     * Load a config file,loads syncrounusly\n     * @param {string} filename - the filename to be loaded\n     */\n    loadConfig(filename){\n        try {\n            var file = fs.readFileSync(filename);\n            var tmpConfig = JSON.parse(file);\n            for(var key in tmpConfig){\n                this.config[key] = tmpConfig[key];\n            }\n        } catch(err){\n            throw err;\n        }\n    }\n\n    /**\n     * set the controller\n     * @param {controller} controller - the manager controller\n     */\n    set controller(controller){\n        this._controller = controller;\n    }\n\n    /**\n     * Get the manager controller\n     * @return {controller} the manager controller\n     */\n    get controller(){\n        return this._controller;\n    }\n\n    /**\n     * Set a value in the config var\n     * @param {string} name - the name of the value\n     * @param {*} value - the value to be set\n     */\n    setValue(name,value){\n        this.config[name] = value;\n    }\n\n    /**\n     * Get a value from the config var\n     * @param {string} name - the name of the value\n     * @return {*} the value of the config[name]\n     */\n    getValue(name){\n       return this.config[name]; \n    }\n\n    /**\n     * Add Routes to the routes array \n     * @param {string} path - the path of the router\n     * @param {router} router - the router to be added\n     */\n    route(path,router){\n        this.routers.push({path:path,router:router});\n    }\n\n    /**\n     * Adds a funtion to the uses array\n     * @param {function} fn - the function to be added to the uses array\n     */\n    use(fn){\n        this.uses.push(fn);\n    }\n\n    /**\n     * Function to be run if no matching paths are found\n     * @param {function} fn - the function to be added\n     */\n    always(fn){\n        this.done = fn;\n    }\n\n    /**\n     * This function is passed into http/https runs the main server\n     * @returns {function} the function to be passed to the http/s\n     */\n    run(){\n        return (req,res)=>{\n            //load post data\n            urlMods(req);\n            responseMods(req,res,this.getValue('port'));\n            cookies(req,res);\n            loadBody(req,res,this.config.maxPostSize,()=>{\n                    var loop = new serverLoop(req,res,this.uses,this.routers,this.done);\n                    loop.loop();\n            });\n        }\n    }\n\n}\n"
  },
  {
    "__docId__": 341,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "server",
    "memberof": "app/flat-lib/server/server.js",
    "longname": "app/flat-lib/server/server.js~server",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/server.js",
    "importStyle": "server",
    "description": "The main server that accepts uses and routers",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 342,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#constructor",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@construnctor",
        "tagValue": ""
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 343,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#config",
    "access": null,
    "description": "The config varable",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routers",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#routers",
    "access": null,
    "description": "The array of the routers",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 345,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uses",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#uses",
    "access": null,
    "description": "The array of use functions format fn(req,res,next)",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 346,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_controller",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#_controller",
    "access": null,
    "description": "The controller where all the managers are stored",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "controller"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadConfig",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#loadConfig",
    "access": null,
    "description": "Load a config file,loads syncrounusly",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename to be loaded"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 348,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#controller",
    "access": null,
    "description": "set the controller",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "controller"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "the manager controller"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 349,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_controller",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#_controller",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "controller",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#controller",
    "access": null,
    "description": "Get the manager controller",
    "lineNumber": 87,
    "return": {
      "nullable": null,
      "types": [
        "controller"
      ],
      "spread": false,
      "description": "the manager controller"
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 351,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValue",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#setValue",
    "access": null,
    "description": "Set a value in the config var",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the value"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value to be set"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 352,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getValue",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#getValue",
    "access": null,
    "description": "Get a value from the config var",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the value of the config[name]"
    },
    "generator": false
  },
  {
    "__docId__": 353,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "route",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#route",
    "access": null,
    "description": "Add Routes to the routes array ",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "the path of the router"
      },
      {
        "nullable": null,
        "types": [
          "router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": "the router to be added"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 354,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "use",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#use",
    "access": null,
    "description": "Adds a funtion to the uses array",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function to be added to the uses array"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 355,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "always",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#always",
    "access": null,
    "description": "Function to be run if no matching paths are found",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "the function to be added"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 356,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "done",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#done",
    "access": null,
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "app/flat-lib/server/server.js~server",
    "longname": "app/flat-lib/server/server.js~server#run",
    "access": null,
    "description": "This function is passed into http/https runs the main server",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} the function to be passed to the http/s"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the function to be passed to the http/s"
    },
    "generator": false
  },
  {
    "__docId__": 358,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/serverLoop.js",
    "memberof": null,
    "longname": "app/flat-lib/server/serverLoop.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\"\n\n/**\n * The class for looping through the routes and use function of the main server\n */\nexport default class serverLoop {\n\n    /**\n     * @constructor\n     * @param {object} req - the request object\n     * @param {object} res - the response object\n     * @param {array} uses - the array of use functions\n     * @param {array} routers - the array of routers\n     * @param {function} end - the final function to be called\n     */\n    constructor(req,res,uses,routers,end){\n        /**\n         * the position of the uses array\n         */\n        this.usesPosition = 0;\n\n        this.req = req;\n        this.res = res;\n        this.uses = uses;\n        this.routers = routers;\n        this.end = end;\n    \n    }\n\n    /**\n     * the loop function to run through all the uses and routers\n     */\n    loop(){\n        if(this.usesPosition < this.uses.length){\n            this.uses[this.usesPosition](this.req,this.res,()=>{\n                this.usesPosition++;\n                this.loop();\n            });\n        } else {\n            //loop through the routers\n            var currentRouter = null;\n            this.routers.forEach((router)=>{\n                if(this.req.url.indexOf(router.path) > -1){\n                    currentRouter = router.router;\n                }\n            });\n            if(currentRouter === null){\n                //run the end function\n                this.end(this.req,this.res);\n            } else {\n                //run the route\n                currentRouter(this.req,this.res);\n            }\n        }\n    }\n}\n"
  },
  {
    "__docId__": 359,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "serverLoop",
    "memberof": "app/flat-lib/server/serverLoop.js",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/serverLoop.js",
    "importStyle": "serverLoop",
    "description": "The class for looping through the routes and use function of the main server",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 360,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "uses",
        "description": "the array of use functions"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "routers",
        "description": "the array of routers"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "the final function to be called"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 361,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "usesPosition",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#usesPosition",
    "access": null,
    "description": "the position of the uses array",
    "lineNumber": 20,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "req",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#req",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "res",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#res",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uses",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#uses",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routers",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#routers",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "end",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#end",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loop",
    "memberof": "app/flat-lib/server/serverLoop.js~serverLoop",
    "longname": "app/flat-lib/server/serverLoop.js~serverLoop#loop",
    "access": null,
    "description": "the loop function to run through all the uses and routers",
    "lineNumber": 33,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 368,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/server/urlMods.js",
    "memberof": null,
    "longname": "app/flat-lib/server/urlMods.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\"use strict\"\n\nimport url from 'url';\n\n/**\n * This function modifies the url\n * @param {object} req - the request object\n * @return {object} the request object\n * @property {string} req.url the modified url as only the path\n * @property {object} req.parsedUrl the parsed url\n * @property {object} req.query the query of the url as an object\n */\nexport default function urlMods(req){\n    req.parsedUrl = url.parse(req.url,true);\n    req.url = req.parsedUrl.pathname;\n    req.query = req.parsedUrl.query;\n}\n"
  },
  {
    "__docId__": 369,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "urlMods",
    "memberof": "app/flat-lib/server/urlMods.js",
    "longname": "app/flat-lib/server/urlMods.js~urlMods",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/server/urlMods.js",
    "importStyle": "urlMods",
    "description": "This function modifies the url",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "req.url",
        "description": "the modified url as only the path"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.parsedUrl",
        "description": "the parsed url"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req.query",
        "description": "the query of the url as an object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the request object"
    },
    "generator": false
  },
  {
    "__docId__": 370,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/session/session.js",
    "memberof": null,
    "longname": "app/flat-lib/session/session.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * The session class for session\n * @extends {item}\n */\nexport default class session extends item {\n\n    /**\n     * Create a new session\n     * @override\n     * @param {object} req - the request object\n     * @param {object} res - the response object\n     * @param {object} sesData - the session data\n     * @param {function(err:error,done:boolean)} callback - the callback function done is true if created\n     * @return {function} the callback function\n     */\n    create(req,res,sesData,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            //create a new cookie\n            this.data.dateCreated = new Date();\n            this.data.cookieName = req.sessionCookieName;\n            var cookieObj = res.setCookie(req.sessionCookieName,this.id,req.sessionCookieTime,'/');\n            this.data.expires = cookieObj.expires;\n            this.data.userAgent = req.headers['user-agent'];\n            this.data.ip = req.headers['x-real-ip'];\n            this.data.sesData = sesData;\n            this.save((err,done)=>{\n                return callback(err,done);\n            });\n        });\n    }\n\n    /**\n     * Get the session data by a param\n     * @param {string} name - the name of the session var to get\n     * @return {object|array|string|number|null|date} the session data item\n     */\n    getData(name){\n        return this.data.sesData[name] || null;\n    }\n\n    /**\n     * Add to the session data\n     * @param {string} key - the key for the new data\n     * @param {string|object|number|date,array,null} value - the new data\n     */\n    addData(key,value){\n        this.data.sesData[key] = value;\n    }\n\n    /**\n     * Remove from the session data\n     * @param {string} key - the key for the data to delete\n     */\n    deleteData(key){\n        delete this.data.sesData[key];\n    }\n\n    /**\n     * Is the session expired?\n     * @return {boolean} if the session is expired\n     */\n    get expired(){\n        var date = new Date();\n        if(date > this.data.expires){\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove a session\n     * @param {object} res - the response object\n     * @param {function(error:err,done:boolean)} callback - done is true if the session was deleted\n     * @return {function} - the callback function\n     */\n    destroy(res,callback){\n        res.removeCookie(this.data.cookieName,'/');\n        this.unlink((err,done)=>{\n            if(err){\n                return callback(err,null)\n            }\n            return callback(null,true);\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 371,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "session",
    "memberof": "app/flat-lib/session/session.js",
    "longname": "app/flat-lib/session/session.js~session",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/session/session.js",
    "importStyle": "session",
    "description": "The session class for session",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 372,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#create",
    "access": null,
    "description": "Create a new session",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "sesData",
        "description": "the session data"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function done is true if created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 373,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getData",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#getData",
    "access": null,
    "description": "Get the session data by a param",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the session var to get"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array",
        "string",
        "number",
        "null",
        "date"
      ],
      "spread": false,
      "description": "the session data item"
    },
    "generator": false
  },
  {
    "__docId__": 374,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addData",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#addData",
    "access": null,
    "description": "Add to the session data",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key for the new data"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object",
          "number",
          "date,array,null"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the new data"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 375,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deleteData",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#deleteData",
    "access": null,
    "description": "Remove from the session data",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "the key for the data to delete"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 376,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "expired",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#expired",
    "access": null,
    "description": "Is the session expired?",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the session is expired"
    },
    "type": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 377,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "app/flat-lib/session/session.js~session",
    "longname": "app/flat-lib/session/session.js~session#destroy",
    "access": null,
    "description": "Remove a session",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "function(error:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the session was deleted"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 378,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/session/sessionManager.js",
    "memberof": null,
    "longname": "app/flat-lib/session/sessionManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport session from './session.js';\n\n/**\n * The session manager for handeling all sessions\n * @extends {manager}\n */\nexport default class sessionManager extends manager {\n\n    /**\n     * Create a new session\n     * @override\n     * @param {object} req - the request object\n     * @param {object} res - the response object\n     * @param {object} sesData - the session data \n     * @param {function(err:error,done:boolean)} callback - done is true if the session was created\n     * @return {function} the callback function\n     */\n    create(req,res,sesData,callback){\n        var ses = new session(this.dir);\n        ses.create(req,res,sesData,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(ses);\n            return callback(null,true);\n        });\n    }\n    \n    /**\n     * Int all of the sessions\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new session(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n    /**\n     * Get a session from a cookie\n     * @param {object} req - the request object\n     * @return {session} return a session object or null if not found\n     */\n    getSession(req){\n        var ses = null;\n        if(!req.cookies[req.sessionCookieName]){\n            return null;\n        }\n        for(var i=0,l=this.items.length; i<l; i++){\n            if(this.items[i].id === req.cookies[req.sessionCookieName]){\n                ses = this.items[i];\n                break;\n            }\n        }\n        return ses;\n    }\n\n    /**\n     * Remove a session from memoery and disk\n     * @param {object} req - the request object\n     * @param {object} res - the response object\n     * @param {function(err:error,done:boolean)} callback - done is true if the session was removed\n     * @return {function} the callback function\n     */\n    destroy(req,res,callback){\n        if(!req.cookies[req.sessionCookieName]){\n            return callback(new Error('No session found'),null);\n        }\n        for(var i=0,l=this.items.length; i<l; i++){\n            if(this.items[i].id === req.cookies[req.sessionCookieName]){\n                break;\n            }\n        }\n        if(i === l){\n            return callback(new Error('No session found'),null);\n        }\n        this.items[i].destroy(res,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.items.splice(i,1);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Syncronously remove all of the expired and orphaned sessions\n     */\n    clean(){\n      for(let i=0,l=this.items.length; i<l; i++){\n        if(this.items[i].expired){\n            this.items[i].unlinkSync();\n            this.items.splice(i,1);\n            i--;\n        }\n      }\n      //removes the nulls from the array\n    }\n\n\n}\n"
  },
  {
    "__docId__": 379,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "sessionManager",
    "memberof": "app/flat-lib/session/sessionManager.js",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/session/sessionManager.js",
    "importStyle": "sessionManager",
    "description": "The session manager for handeling all sessions",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 380,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/session/sessionManager.js~sessionManager",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager#create",
    "access": null,
    "description": "Create a new session",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "sesData",
        "description": "the session data"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the session was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 381,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/session/sessionManager.js~sessionManager",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager#init",
    "access": null,
    "description": "Int all of the sessions",
    "lineNumber": 37,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 382,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSession",
    "memberof": "app/flat-lib/session/sessionManager.js~sessionManager",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager#getSession",
    "access": null,
    "description": "Get a session from a cookie",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "session"
      ],
      "spread": false,
      "description": "return a session object or null if not found"
    },
    "generator": false
  },
  {
    "__docId__": 383,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "app/flat-lib/session/sessionManager.js~sessionManager",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager#destroy",
    "access": null,
    "description": "Remove a session from memoery and disk",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "the request object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "the response object"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the session was removed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 384,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clean",
    "memberof": "app/flat-lib/session/sessionManager.js~sessionManager",
    "longname": "app/flat-lib/session/sessionManager.js~sessionManager#clean",
    "access": null,
    "description": "Syncronously remove all of the expired and orphaned sessions",
    "lineNumber": 95,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 385,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/template/template.js",
    "memberof": null,
    "longname": "app/flat-lib/template/template.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * This class stores the templkates for the pages\n * @extends {item}\n */\nexport default class template extends item {\n\n    /**\n     * Create a new template\n     * @overrride\n     * @param {string} name - the name of the template\n     * @param {string} layout - the layout of the template\n     * @param {function(err:error,done:booelan)} callback - done is true if the template was created\n     * @return {function} the callback function\n     */\n    create(name,layout,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.name = name;\n            this.data.layout = layout;\n            this.data.dateCreated = new Date();\n            this.save((err,done)=>{\n                return callback(err,done);\n            });\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 386,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "template",
    "memberof": "app/flat-lib/template/template.js",
    "longname": "app/flat-lib/template/template.js~template",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/template/template.js",
    "importStyle": "template",
    "description": "This class stores the templkates for the pages",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 387,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/template/template.js~template",
    "longname": "app/flat-lib/template/template.js~template#create",
    "access": null,
    "description": "Create a new template",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@overrride",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the template"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the layout of the template"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:booelan)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the template was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 388,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/template/templateManager.js",
    "memberof": null,
    "longname": "app/flat-lib/template/templateManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport template from './template.js';\n\n/**\n * This class manages the templates\n * @extend {manager}\n */\nexport default class templateManager extends manager {\n\n    /**\n     * Create a new template and add to items\n     * @override\n     * @param {string} name - the name of the template\n     * @param {object} layout - the layout of the template\n     * @param {function(err:error,done:boolean)} callback - done is true if the template was created\n     * @return {function} the callback function\n     */\n    create(name,layout,callback){\n        var tmp = new template(this.dir);\n        tmp.create(name,layout,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(tmp);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Int all of the templates\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new template(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 389,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "templateManager",
    "memberof": "app/flat-lib/template/templateManager.js",
    "longname": "app/flat-lib/template/templateManager.js~templateManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/template/templateManager.js",
    "importStyle": "templateManager",
    "description": "This class manages the templates",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@extend",
        "tagValue": "{manager}"
      }
    ],
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 390,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/template/templateManager.js~templateManager",
    "longname": "app/flat-lib/template/templateManager.js~templateManager#create",
    "access": null,
    "description": "Create a new template and add to items",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the template"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "layout",
        "description": "the layout of the template"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the template was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 391,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/template/templateManager.js~templateManager",
    "longname": "app/flat-lib/template/templateManager.js~templateManager#init",
    "access": null,
    "description": "Int all of the templates",
    "lineNumber": 36,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 392,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/upload/upload.js",
    "memberof": null,
    "longname": "app/flat-lib/upload/upload.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\n\n/**\n * This class contains a single upload\n * @extends {item}\n */\nexport default class upload extends item {\n\n    /**\n     * Create a new file upload object\n     * @override\n     * @param {string} filename - the filename of the file\n     * @param {boolean} priv - indicates if the file is private or not\n     * @param {string} mime - the mime type\n     * @param {function(err:error,done:boolean)} callback - done is true if the obj was created\n     * @return {function} the callback function\n     */\n    create(filename,priv,mime,callback){\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.fileName = filename;\n            this.data.private = priv;\n            this.data.mime = mime;\n            this.data.dateCreated = new Date();\n            this.save((err,done)=>{\n                return callback(err,done);\n            });\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 393,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "upload",
    "memberof": "app/flat-lib/upload/upload.js",
    "longname": "app/flat-lib/upload/upload.js~upload",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/upload/upload.js",
    "importStyle": "upload",
    "description": "This class contains a single upload",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 394,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/upload/upload.js~upload",
    "longname": "app/flat-lib/upload/upload.js~upload#create",
    "access": null,
    "description": "Create a new file upload object",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename of the file"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "priv",
        "description": "indicates if the file is private or not"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mime",
        "description": "the mime type"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the obj was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 395,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/upload/uploadManager.js",
    "memberof": null,
    "longname": "app/flat-lib/upload/uploadManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport manager from '../helpers/items/manager.js';\nimport upload from './upload.js';\n\n/**\n * Manages all of the uploads\n * @extends {item} \n */\nexport default class uploadManager extends manager {\n\n    /**\n     * Create a new upload item\n     * @override\n     * @param {string} filename - the filename\n     * @param {boolean} priv - indicates if the file is private or not\n     * @param {string} mime - the mime type\n     * @param {function(err:err,done:boolean)} callback - done is true if the obj was created\n     * @return {function} the callback function\n     */\n    create(filename,priv,mime,callback){\n        var up = new upload(this.dir);\n        up.create(filename,priv,mime,(err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.add(up);\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Int all of the uploads\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new upload(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n}\n"
  },
  {
    "__docId__": 396,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "uploadManager",
    "memberof": "app/flat-lib/upload/uploadManager.js",
    "longname": "app/flat-lib/upload/uploadManager.js~uploadManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/upload/uploadManager.js",
    "importStyle": "uploadManager",
    "description": "Manages all of the uploads",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 397,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/upload/uploadManager.js~uploadManager",
    "longname": "app/flat-lib/upload/uploadManager.js~uploadManager#create",
    "access": null,
    "description": "Create a new upload item",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "the filename"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "priv",
        "description": "indicates if the file is private or not"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mime",
        "description": "the mime type"
      },
      {
        "nullable": null,
        "types": [
          "function(err:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "done is true if the obj was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 398,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/upload/uploadManager.js~uploadManager",
    "longname": "app/flat-lib/upload/uploadManager.js~uploadManager#init",
    "access": null,
    "description": "Int all of the uploads",
    "lineNumber": 37,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 399,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/user/user.js",
    "memberof": null,
    "longname": "app/flat-lib/user/user.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport item from '../helpers/items/item.js';\nimport emailVal from '../helpers/emailVal.js';\nimport crypto from 'crypto';\n\n\n/**\n * This is the user class for managing user data\n * @extends {item}\n */\nexport default class user extends item {\n\n    /**\n     * Create a user\n     * @override\n     * @param {string} username - the user name of the account\n     * @param {string} email - the email of the account\n     * @param {string} pass - the password of the account\n     * @param {function(err:err,done:boolean)} callback - if true the user was created \n     * @return {function} the callback function\n     */\n    create(username,email,pass,callback){\n        //check email\n        if(!emailVal(email)){\n            return callback(new Error(\"Invalid Email\"),null);\n        }\n        //generate id\n        this.genId((err,done)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.username = username;\n            this.data.email = email;\n            this.data.dateCreated = new Date();\n            //create a password\n            this.password(pass,(err,done)=>{\n                if(err){\n                    return callback(err,null);\n                }\n                this.save((err,done)=>{\n                    return callback(err,done);\n                });\n            });\n        });\n    }\n\n    /**\n     * Create or change a password sets hash and salt\n     * @param {string} pass - the password to add\n     * @param {function(err:error,done:boolean)} callback - the callback if created error or true\n     * @return {function} the callback function\n     */\n    password(pass,callback){\n        crypto.randomBytes(12,(err,bytes)=>{\n            if(err){\n                return callback(err,null);\n            }\n            this.data.salt = bytes.toString();\n            var hash = crypto.createHash('sha512');\n            hash.update(pass,'utf8');\n            hash.update(this.data.salt,'utf8');\n            this.data.hash = hash.digest('base64');\n            return callback(null,true);\n        });\n    }\n\n    /**\n     * Authenticate a user\n     * @param {string} pass - the password to check\n     * @return {boolean} if the password matches or not\n     */\n    auth(pass){\n        var hash = crypto.createHash('sha512');\n        hash.update(pass,'utf8');\n        hash.update(this.data.salt,'utf8');\n        hash = hash.digest('base64');\n        if(hash !== this.data.hash){\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Convert the user to string and hide the username and password\n     * @override\n     * @return {object} the user object wihout the salt or hash\n     */\n    toString(){\n        var newUser = {};\n        newUser.username = this.data.username;\n        newUser.email = this.data.email;\n        newUser.dateCreated = this.data.dateCreated;\n        return JSON.stringify(newUser,null,2);\n    }\n\n\n\n}\n"
  },
  {
    "__docId__": 400,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "user",
    "memberof": "app/flat-lib/user/user.js",
    "longname": "app/flat-lib/user/user.js~user",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/user/user.js",
    "importStyle": "user",
    "description": "This is the user class for managing user data",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "item"
    ]
  },
  {
    "__docId__": 401,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/user/user.js~user",
    "longname": "app/flat-lib/user/user.js~user#create",
    "access": null,
    "description": "Create a user",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the user name of the account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "the email of the account"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pass",
        "description": "the password of the account"
      },
      {
        "nullable": null,
        "types": [
          "function(err:err,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "if true the user was created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 402,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "password",
    "memberof": "app/flat-lib/user/user.js~user",
    "longname": "app/flat-lib/user/user.js~user#password",
    "access": null,
    "description": "Create or change a password sets hash and salt",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pass",
        "description": "the password to add"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback if created error or true"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 403,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "auth",
    "memberof": "app/flat-lib/user/user.js~user",
    "longname": "app/flat-lib/user/user.js~user#auth",
    "access": null,
    "description": "Authenticate a user",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pass",
        "description": "the password to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the password matches or not"
    },
    "generator": false
  },
  {
    "__docId__": 404,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "app/flat-lib/user/user.js~user",
    "longname": "app/flat-lib/user/user.js~user#toString",
    "access": null,
    "description": "Convert the user to string and hide the username and password",
    "lineNumber": 90,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the user object wihout the salt or hash"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 405,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-lib/user/userManager.js",
    "memberof": null,
    "longname": "app/flat-lib/user/userManager.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nimport manager from '../helpers/items/manager.js';\nimport user from './user.js';\n\n/**\n * This class manages the users\n * @extends {manager}\n */\nexport default class userManager extends manager {\n\n    /**\n     * Create a user\n     * @override\n     * @param {string} username - the users account name\n     * @param {string} email - the users email\n     * @param {string} pass - the users password\n     * @param {function(err:error,done:boolean)} callback - callback function done is true if account created\n     * @return {function} the callback function\n     */\n    create(username,email,pass,callback){\n        var usr = new user(this.dir);\n        var match = this.findByParam('username',username);\n        if(match !== null){\n            return callback(new Error(\"User allready exists\"),null);\n        } else {\n            usr.create(username,email,pass,(err,done)=>{\n                if(err){\n                    return callback(err,null);\n                }\n                this.add(usr);\n                return callback(null,true);\n            });\n        }\n    }    \n\n    /**\n     * Int all of the users\n     * @override\n     */\n    init(){\n        var itemArr = this.subInt();\n        itemArr.forEach((obj)=>{\n            var newItem = new user(this.dir,obj.file,obj.data);\n            this.add(newItem);\n        });\n    }\n\n\n\n}\n"
  },
  {
    "__docId__": 406,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "userManager",
    "memberof": "app/flat-lib/user/userManager.js",
    "longname": "app/flat-lib/user/userManager.js~userManager",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-lib/user/userManager.js",
    "importStyle": "userManager",
    "description": "This class manages the users",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "manager"
    ]
  },
  {
    "__docId__": 407,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "app/flat-lib/user/userManager.js~userManager",
    "longname": "app/flat-lib/user/userManager.js~userManager#create",
    "access": null,
    "description": "Create a user",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the users account name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "the users email"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pass",
        "description": "the users password"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,done:boolean)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function done is true if account created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 408,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "app/flat-lib/user/userManager.js~userManager",
    "longname": "app/flat-lib/user/userManager.js~userManager#init",
    "access": null,
    "description": "Int all of the users",
    "lineNumber": 40,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 409,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/blog.js",
    "memberof": null,
    "longname": "app/flat-routers/blog.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\n\nconst blogRouter = new router();\n\nblogRouter.use((req,res,next)=>{\n    //find the blog or next\n    var newUrl = req.url.replace('/blog','');\n    var blogCache = blogRouter.controller.blogCache.findByParam('permalink',newUrl);\n    if(blogCache !== null){\n        res.statusCode = 200;\n        res.setHeader('content-type','text/html; charset=utf-8');\n        res.end(blogCache.get('fileStr'));\n    } else {\n        next();\n    }\n});\n\nblogRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; charset=utf-8');\n    res.end('<h1>Blog 404</h1>');\n});\n\nexport default blogRouter;\n"
  },
  {
    "__docId__": 410,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/blogList.js",
    "memberof": null,
    "longname": "app/flat-routers/blogList.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\n\nconst blogListRouter = new router();\n\nblogListRouter.use((req,res,next)=>{\n    var page = req.query.page;\n    try {\n      page =  parseInt(page);\n    } catch(err){\n        page = 0;\n    }\n    if(isNaN(page)){\n        page = 0;\n    }\n    let total = blogListRouter.controller.blogTemplate.numPerPage;\n    let blogStr = blogListRouter.controller.blogListCache.getSelection(page,total); \n    //grab the blog template\n    let blogTemplate = blogListRouter.controller.blogTemplate.cache.replace('<BLOGDATA/>','');\n    blogTemplate = blogTemplate.replace('<BLOGLIST/>',blogStr);\n    res.statusCode = 200;\n    res.setHeader('content-type','text/html; chartset=utf-8');\n    res.end(blogTemplate);\n});\n\nblogListRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; chartset=utf-8');\n    res.end('<h1>Blog List 404</h1>');\n});\n\nexport default blogListRouter;\n"
  },
  {
    "__docId__": 411,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/debug.js",
    "memberof": null,
    "longname": "app/flat-routers/debug.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\n\nconst debugRouter = new router();\n\ndebugRouter.use((req,res,next)=>{\n    if(debugRouter.controller.config.getValue('debugEnabled') === 'true'){\n        next();\n    } else {\n        res.redirect('/');\n    }\n});\n\ndebugRouter.get('/flat-debug/view',(req,res)=>{\n    res.setHeader('content-type','text/plain; charset=utf-8');\n    var jsonString = '';\n    var manager = req.query.manager;\n    if(manager){\n        try {\n            jsonString = JSON.stringify(debugRouter.controller[manager],null,2);\n        } catch(err){\n            jsonString = JSON.stringify(debugRouter.controller,null,2);\n        }\n    } else {\n        jsonString = JSON.stringify(debugRouter.controller,null,2);\n    }\n    res.statusCode = 200;\n    res.end(jsonString);\n});\n\ndebugRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; charset=utf-8');\n    res.end('<h1>Not Found</h1>');\n});\n\nexport default debugRouter;\n"
  },
  {
    "__docId__": 412,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/index.js",
    "memberof": null,
    "longname": "app/flat-routers/index.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\n\nconst mainRouter = new router();\n\n//load a page form the cache\nmainRouter.use((req,res,next)=>{\n    if(req.method === 'GET'){\n        var cache = mainRouter.controller.cacheManager.findByParam('permalink',req.url);\n            res.setHeader('content-type','text/html; charset=utf-8');\n        if(cache === null){\n            res.statusCode = 404;\n            res.end('<h1>Not Found</h1>');\n        } else {\n            res.stausCode = 200;\n            res.end(cache.get('fileStr'));\n        }\n    } else {\n        next();\n    }\n});\n\n\n//404 page\nmainRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; charset=utf-8');\n    res.end('<h1>Main 404</h1>');\n});\n\nexport default mainRouter;\n"
  },
  {
    "__docId__": 413,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/install.js",
    "memberof": null,
    "longname": "app/flat-routers/install.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\n//install router only used to create a user at first load\n\nimport router from '../flat-lib/server/router.js';\n\nconst installRouter = new router();\n\ninstallRouter.use((req,res,next)=>{\n    if(installRouter.controller.config.getValue('installed') === 'yes'){\n        //redirect to index\n        res.redirect('/flat-login');\n    } else {\n        next();\n    }\n});\n\n//get the install page\ninstallRouter.get('/flat-install',(req,res)=>{\n    res.sendStatic('./flat-static/install.html');\n});\n\ninstallRouter.post('/flat-install',(req,res)=>{\n    var username = req.body.username;\n    var email = req.body.email;\n    var pass = req.body.password;\n    installRouter.controller.userManager.create(username,email,pass,(err,done)=>{\n        if(err){\n            console.dir(err);\n            res.statusCode = 500;\n            res.setHeader('content-type','text/html; charset=utf8');\n            res.end('Failed To Install');\n        } else {\n           installRouter.controller.config.setValue('installed','yes');\n           res.redirect('/flat-login');\n        }\n    });\n});\n\ninstallRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; charset=utf-8');\n    res.end('<h1>Not Found</h1>');\n});\n\n\nexport default installRouter;\n"
  },
  {
    "__docId__": 414,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-routers/signin.js",
    "memberof": null,
    "longname": "app/flat-routers/signin.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport router from '../flat-lib/server/router.js';\n\nconst signinRouter = new router();\n\nsigninRouter.use((req,res,next)=>{\n    //check if the user has a logged in session\n    var ses = signinRouter.controller.sessionManager.getSession(req);\n    if(ses !== null){\n        if(ses.getData('username')){\n            res.redirect('/flat-admin');\n        } else {\n            next();\n        }\n    } else {\n        next();\n    }\n});\n\nsigninRouter.use((req,res,next)=>{\n    if(signinRouter.controller.config.getValue('installed') !== 'yes'){\n        //redirect to index\n        res.redirect('/flat-install');\n    } else {\n        next();\n    }\n});\n\nsigninRouter.get('/flat-login',(req,res)=>{\n    res.sendStatic('./flat-static/signin.html');\n});\n\nsigninRouter.post('/flat-login',(req,res)=>{\n    var username = req.body.username;\n    var pass = req.body.password;\n    res.statusCode = 500;\n    res.setHeader('content-type','text/html; charset=utf8');   \n    var user = signinRouter.controller.userManager.findByParam('username',username);\n    if(user === null){ \n        res.end('<h1>No User Found</h1>');\n        return;\n    }\n    if(!user.auth(pass)){\n        res.end('<h1>Pass auth failed</h1>');\n        return;\n    }\n    //set session\n    var sesData = {'username':username};\n    signinRouter.controller.sessionManager.create(req,res,sesData,(err,done)=>{\n        if(err){\n            res.end('<h1>Unable to create session</h1>');\n        } else {\n            //add to the last login\n            var info = signinRouter.controller.info.data; \n            info.lastLogin[username] = new Date();\n            res.redirect('/flat-admin');\n        }\n    });\n});\n\nsigninRouter.always((req,res)=>{\n    res.statusCode = 404;\n    res.setHeader('content-type','text/html; charset=utf-8');\n    res.end('<h1>Not Found</h1>');\n});   \n\nexport default signinRouter;\n"
  },
  {
    "__docId__": 415,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/flat-scripts/tail.js",
    "memberof": null,
    "longname": "app/flat-scripts/tail.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport child from 'child_process';\nvar exec = child.exec;\n\n/**\n * This file uses child process to tail files\n * @param {string} file - the file to tail\n * @param {number} lines - the number of lines to tail\n * @param {function(err:error,file:string)} callback - returns the tailed file\n * @return {function} the callback function\n */\nexport default function tail(file,lines,callback){\n    var cmd = 'tail -n ' + lines + ' ' + file;\n    exec(cmd,(error,stdout,stderr)=>{\n        if(error){\n            return callback(stderr,null);\n        }\n        return callback(null,stdout);\n    });\n}\n"
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "exec",
    "memberof": "app/flat-scripts/tail.js",
    "longname": "app/flat-scripts/tail.js~exec",
    "access": null,
    "export": false,
    "importPath": "flat/app/flat-scripts/tail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "tail",
    "memberof": "app/flat-scripts/tail.js",
    "longname": "app/flat-scripts/tail.js~tail",
    "access": null,
    "export": true,
    "importPath": "flat/app/flat-scripts/tail.js",
    "importStyle": "tail",
    "description": "This file uses child process to tail files",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "the file to tail"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lines",
        "description": "the number of lines to tail"
      },
      {
        "nullable": null,
        "types": [
          "function(err:error,file:string)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "returns the tailed file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "the callback function"
    },
    "generator": false
  },
  {
    "__docId__": 418,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "app/init.js",
    "memberof": null,
    "longname": "app/init.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\n\"use strict\"\n\nimport pageManager from './flat-lib/page/pageManager.js';\nimport sectionManager from './flat-lib/section/sectionManager.js';\nimport sessionManager from './flat-lib/session/sessionManager.js';\nimport templateManager from './flat-lib/template/templateManager.js';\nimport userManager from './flat-lib/user/userManager.js'\nimport cacheManager from './flat-lib/cache/cacheManager.js';\nimport uploadManager from './flat-lib/upload/uploadManager.js';\nimport blogManager from './flat-lib/blog/blogManager.js';\nimport controller from './flat-lib/controller.js';\nimport configManager from './flat-lib/config/config.js';\nimport infoManager from './flat-lib/info/info.js';\nimport uploadedFiles from './flat-lib/helpers/uploadedFiles.js';\nimport blogTemplate from './flat-lib/blogTemplate/blogTemplate.js';\n\nconst config = new configManager('./flat-config/config.json');\n\nconst pm = new pageManager(config.getValue('pageDir'));\n\nconst sm = new sectionManager(config.getValue('sectionDir'));\n\nconst ses = new sessionManager(config.getValue('sessionDir'));\n\nconst tm = new templateManager(config.getValue('templateDir'));\n\nconst usm = new userManager(config.getValue('userDir'));\n\nconst cm = new cacheManager(config.getValue('cacheDir'));\n\nconst blogCache = new cacheManager(config.getValue('blogCacheDir'));\n\nconst blogListCache = new cacheManager(config.getValue('blogListCacheDir'));\n\nconst um = new uploadManager(config.getValue('uploadDir'));\n\nconst bm = new blogManager(config.getValue('blogDir'));\n\nconst info = new infoManager(config.getValue('infoDir'),config.getValue('infoFile'),parseInt(config.getValue('writeInfoToDiskAfter')));\n\nvar uploadDirs =  config.getValue('upload');\n\nconst uploader = new uploadedFiles(uploadDirs.public,uploadDirs.private);\n\nconst bt = new blogTemplate(config.getValue('blogListTemplateDir'),config.getValue('blogListTemplateFile'));\n\nconst controll = new controller(pm,sm,ses,tm,usm,cm,um,bm,config,info,uploader,bt,blogCache,blogListCache); \ncontroll.init();\n\nexport default controll;\n"
  },
  {
    "__docId__": 419,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "app/init.js",
    "longname": "app/init.js~config",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/config/config.js~configManager"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pm",
    "memberof": "app/init.js",
    "longname": "app/init.js~pm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/page/pageManager.js~pageManager"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "sm",
    "memberof": "app/init.js",
    "longname": "app/init.js~sm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/section/sectionManager.js~sectionManager"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ses",
    "memberof": "app/init.js",
    "longname": "app/init.js~ses",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/session/sessionManager.js~sessionManager"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "tm",
    "memberof": "app/init.js",
    "longname": "app/init.js~tm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/template/templateManager.js~templateManager"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "usm",
    "memberof": "app/init.js",
    "longname": "app/init.js~usm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/user/userManager.js~userManager"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "cm",
    "memberof": "app/init.js",
    "longname": "app/init.js~cm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/cache/cacheManager.js~cacheManager"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "blogCache",
    "memberof": "app/init.js",
    "longname": "app/init.js~blogCache",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/cache/cacheManager.js~cacheManager"
      ]
    }
  },
  {
    "__docId__": 427,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "blogListCache",
    "memberof": "app/init.js",
    "longname": "app/init.js~blogListCache",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/cache/cacheManager.js~cacheManager"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "um",
    "memberof": "app/init.js",
    "longname": "app/init.js~um",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/upload/uploadManager.js~uploadManager"
      ]
    }
  },
  {
    "__docId__": 429,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bm",
    "memberof": "app/init.js",
    "longname": "app/init.js~bm",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/blog/blogManager.js~blogManager"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "info",
    "memberof": "app/init.js",
    "longname": "app/init.js~info",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/info/info.js~infoManager"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "uploadDirs",
    "memberof": "app/init.js",
    "longname": "app/init.js~uploadDirs",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "uploader",
    "memberof": "app/init.js",
    "longname": "app/init.js~uploader",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/helpers/uploadedFiles.js~uploadedFiles"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bt",
    "memberof": "app/init.js",
    "longname": "app/init.js~bt",
    "access": null,
    "export": false,
    "importPath": "flat/app/init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "app/flat-lib/blogTemplate/blogTemplate.js~blogTemplate"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 436,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 437,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 438,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 439,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 440,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 441,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 442,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 443,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 444,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 445,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 446,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 447,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 448,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 449,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 450,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 451,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 452,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 453,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 454,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 455,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 456,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 457,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 458,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 459,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 460,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 461,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 462,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 463,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 464,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 465,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 466,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 467,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 468,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 469,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 470,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 471,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 472,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 473,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 474,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 475,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 476,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 477,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 478,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 479,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 480,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 481,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 483,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 484,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 485,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 486,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 487,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 488,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 489,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]